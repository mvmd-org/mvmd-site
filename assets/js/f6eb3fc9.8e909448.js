"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[3169],{4548:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"concepts/metadata/types-of-assets","title":"Asset Types","description":"MVMD uses Schema.org types to describe different kinds of metaverse assets. This guide covers the most important types and when to use them.","source":"@site/docs/concepts/metadata/types-of-assets.md","sourceDirName":"concepts/metadata","slug":"/concepts/metadata/types-of-assets","permalink":"/concepts/metadata/types-of-assets","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/concepts/metadata/types-of-assets.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Schema.org","permalink":"/concepts/metadata/schema-org"},"next":{"title":"Linking vs Embedding","permalink":"/concepts/linking-vs-embedding"}}');var i=t(4848),a=t(8453);const r={sidebar_position:3},l="Asset Types",c={},o=[{value:"Core Types",id:"core-types",level:2},{value:"CreativeWork",id:"creativework",level:3},{value:"MediaObject Types",id:"mediaobject-types",level:3},{value:"3DModel",id:"3dmodel",level:4},{value:"ImageObject",id:"imageobject",level:4},{value:"Other Media Types",id:"other-media-types",level:4},{value:"Location Types",id:"location-types",level:2},{value:"Place",id:"place",level:3},{value:"VirtualLocation",id:"virtuallocation",level:3},{value:"Experience Types",id:"experience-types",level:2},{value:"Event",id:"event",level:3},{value:"SoftwareApplication",id:"softwareapplication",level:3},{value:"Type Selection Guidelines",id:"type-selection-guidelines",level:2},{value:"Combined Types",id:"combined-types",level:2},{value:"Related Concepts",id:"related-concepts",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"asset-types",children:"Asset Types"})}),"\n",(0,i.jsx)(n.p,{children:"MVMD uses Schema.org types to describe different kinds of metaverse assets. This guide covers the most important types and when to use them."}),"\n",(0,i.jsx)(n.h2,{id:"core-types",children:"Core Types"}),"\n",(0,i.jsx)(n.h3,{id:"creativework",children:"CreativeWork"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/CreativeWork",children:"CreativeWork"})," is the most versatile base type for digital assets. Use it for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complex assets with multiple components"}),"\n",(0,i.jsx)(n.li,{children:"Collections of assets"}),"\n",(0,i.jsx)(n.li,{children:"Multi-part creations"}),"\n",(0,i.jsx)(n.li,{children:"Assets that don't fit a more specific type"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "CreativeWork",\n  "name": "Digital Asset",\n  "creator": {\n    "@type": "Organization",\n    "name": "Digital Studio"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mediaobject-types",children:"MediaObject Types"}),"\n",(0,i.jsx)(n.h4,{id:"3dmodel",children:"3DModel"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/3DModel",children:"3DModel"})," is the primary type for three-dimensional assets:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Character Model",\n  "contentUrl": "https://example.com/model.glb",\n  "encodingFormat": "model/gltf-binary"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Virtual objects"}),"\n",(0,i.jsx)(n.li,{children:"Character models"}),"\n",(0,i.jsx)(n.li,{children:"Environmental elements"}),"\n",(0,i.jsx)(n.li,{children:"Interactive props"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"imageobject",children:"ImageObject"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/ImageObject",children:"ImageObject"})," is used for images, textures, and previews:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "ImageObject",\n  "name": "Asset Preview",\n  "contentUrl": "https://example.com/preview.jpg",\n  "encodingFormat": "image/jpeg",\n  "width": "1024",\n  "height": "1024"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Asset previews"}),"\n",(0,i.jsx)(n.li,{children:"Thumbnails"}),"\n",(0,i.jsx)(n.li,{children:"Textures"}),"\n",(0,i.jsx)(n.li,{children:"Marketing images"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"other-media-types",children:"Other Media Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://schema.org/AudioObject",children:"AudioObject"})}),": For sound effects, music, and voice"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://schema.org/VideoObject",children:"VideoObject"})}),": For video content and animations"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"location-types",children:"Location Types"}),"\n",(0,i.jsx)(n.h3,{id:"place",children:"Place"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/Place",children:"Place"})," is used for digital twins of physical locations:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "Place",\n  "name": "Digital Museum Twin",\n  "description": "Digital twin of the Metropolitan Museum",\n  "geo": {\n    "@type": "GeoCoordinates",\n    "latitude": 40.7794,\n    "longitude": -73.9632\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Digital twins of real buildings"}),"\n",(0,i.jsx)(n.li,{children:"Virtual representations of physical spaces"}),"\n",(0,i.jsx)(n.li,{children:"Location-based experiences"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"virtuallocation",children:"VirtualLocation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/VirtualLocation",children:"VirtualLocation"})," is used for purely virtual spaces:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "VirtualLocation",\n  "name": "Fantasy Arena",\n  "description": "A floating combat arena in the metaverse",\n  "potentialAction": {\n    "@type": "JoinAction",\n    "target": {\n      "@type": "EntryPoint",\n      "urlTemplate": "https://meta.example.com/arena"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Virtual meeting spaces"}),"\n",(0,i.jsx)(n.li,{children:"Game environments"}),"\n",(0,i.jsx)(n.li,{children:"Fantasy locations"}),"\n",(0,i.jsx)(n.li,{children:"Abstract spaces"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"experience-types",children:"Experience Types"}),"\n",(0,i.jsx)(n.h3,{id:"event",children:"Event"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/Event",children:"Event"})," describes activities happening at a certain time:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "Event",\n  "name": "Virtual Concert",\n  "startDate": "2023-08-15T19:00:00-07:00",\n  "endDate": "2023-08-15T22:00:00-07:00",\n  "location": {\n    "@type": "VirtualLocation",\n    "name": "Concert Arena",\n    "url": "https://meta.example.com/concert"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Timed experiences"}),"\n",(0,i.jsx)(n.li,{children:"Virtual performances"}),"\n",(0,i.jsx)(n.li,{children:"Scheduled activities"}),"\n",(0,i.jsx)(n.li,{children:"Limited-time offers"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"softwareapplication",children:"SoftwareApplication"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://schema.org/SoftwareApplication",children:"SoftwareApplication"})," is for interactive applications:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "Interactive Experience",\n  "applicationCategory": "Game",\n  "operatingSystem": "WebXR"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Games and applications"}),"\n",(0,i.jsx)(n.li,{children:"Interactive experiences"}),"\n",(0,i.jsx)(n.li,{children:"Tools and utilities"}),"\n",(0,i.jsx)(n.li,{children:"Educational simulations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"type-selection-guidelines",children:"Type Selection Guidelines"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Specificity"}),": Choose the most specific type that fits your asset"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Consider how the asset will be used and discovered"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Properties"}),": Select types that support the properties you need"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Relationships"}),": Consider how the type relates to other assets"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"combined-types",children:"Combined Types"}),"\n",(0,i.jsxs)(n.p,{children:["You can use ",(0,i.jsx)(n.code,{children:"additionalType"})," to indicate an asset belongs to multiple categories:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "CreativeWork",\n  "additionalType": "VirtualLocation",\n  "name": "Interactive Gallery Experience",\n  "description": "Both a creative work and a virtual location"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"related-concepts",children:"Related Concepts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./metadata-fundamentals.md",children:"Metadata Fundamentals"}),": Core principles of metadata structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./linking-vs-embedding.md",children:"Linking vs Embedding"}),": How to reference and embed content"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./structural-organization.md",children:"Structural Organization"}),": Best practices for organization"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);