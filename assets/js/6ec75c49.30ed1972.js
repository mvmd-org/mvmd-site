"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[7103],{6381:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"recipes/overview","title":"Overview","description":"The Recipes section provides standardized metadata templates for common Metaverse asset types. These recipes combine multiple standards and best practices into ready-to-use patterns that ensure interoperability and functionality across different platforms and environments.","source":"@site/docs/recipes/overview.md","sourceDirName":"recipes","slug":"/recipes/overview","permalink":"/recipes/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/recipes/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices","permalink":"/implementation/best-practices"},"next":{"title":"Composable 3D NFT","permalink":"/recipes/composable-3d-nft"}}');var t=n(4848),r=n(8453);const l={sidebar_position:1},a="Overview",c={},o=[{value:"Available Recipes",id:"available-recipes",level:2},{value:"Composable 3D NFT Recipe",id:"composable-3d-nft-recipe",level:3},{value:"Planned Recipes",id:"planned-recipes",level:2},{value:"Basic",id:"basic",level:3},{value:"Wearable",id:"wearable",level:3},{value:"Avatar",id:"avatar",level:3},{value:"Equipable",id:"equipable",level:3},{value:"Scene",id:"scene",level:3},{value:"Future Concepts",id:"future-concepts",level:3},{value:"Contributing New Recipes",id:"contributing-new-recipes",level:2},{value:"Getting Started",id:"getting-started",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsx)(i.p,{children:"The Recipes section provides standardized metadata templates for common Metaverse asset types. These recipes combine multiple standards and best practices into ready-to-use patterns that ensure interoperability and functionality across different platforms and environments."}),"\n",(0,t.jsx)(i.h2,{id:"available-recipes",children:"Available Recipes"}),"\n",(0,t.jsx)(i.h3,{id:"composable-3d-nft-recipe",children:"Composable 3D NFT Recipe"}),"\n",(0,t.jsx)(i.p,{children:"Currently our only published recipe, defining metadata for complex 3D NFTs that can be broken down into component parts:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"NFT standard compatibility"}),"\n",(0,t.jsx)(i.li,{children:"Component relationships"}),"\n",(0,t.jsx)(i.li,{children:"3D model integration"}),"\n",(0,t.jsx)(i.li,{children:"Asset composition"}),"\n",(0,t.jsx)(i.li,{children:"Preview generation"}),"\n",(0,t.jsx)(i.li,{children:"Technical specifications"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Jump to the ",(0,t.jsx)(i.a,{href:"/recipes/composable-3d-nft",children:"Composable 3D NFT Recipe"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"planned-recipes",children:"Planned Recipes"}),"\n",(0,t.jsx)(i.p,{children:"We have several recipes in development that will be released after community review:"}),"\n",(0,t.jsx)(i.h3,{id:"basic",children:"Basic"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Core metadata structure"}),"\n",(0,t.jsx)(i.li,{children:"Essential properties"}),"\n",(0,t.jsx)(i.li,{children:"Standard identifiers"}),"\n",(0,t.jsx)(i.li,{children:"Basic validation rules"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"wearable",children:"Wearable"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Attachment points"}),"\n",(0,t.jsx)(i.li,{children:"Customization options"}),"\n",(0,t.jsx)(i.li,{children:"Avatar compatibility"}),"\n",(0,t.jsx)(i.li,{children:"Physics properties"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"avatar",children:"Avatar"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Character properties"}),"\n",(0,t.jsx)(i.li,{children:"Animation support"}),"\n",(0,t.jsx)(i.li,{children:"Customization systems"}),"\n",(0,t.jsx)(i.li,{children:"Interaction capabilities"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"equipable",children:"Equipable"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Attachment configurations"}),"\n",(0,t.jsx)(i.li,{children:"Interaction systems"}),"\n",(0,t.jsx)(i.li,{children:"Animation controls"}),"\n",(0,t.jsx)(i.li,{children:"Physics properties"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"scene",children:"Scene"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Spatial configuration"}),"\n",(0,t.jsx)(i.li,{children:"Lighting systems"}),"\n",(0,t.jsx)(i.li,{children:"Interactive elements"}),"\n",(0,t.jsx)(i.li,{children:"Performance settings"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"future-concepts",children:"Future Concepts"}),"\n",(0,t.jsx)(i.p,{children:"Additional recipes under consideration:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Digital Twins"}),"\n",(0,t.jsx)(i.li,{children:"Vehicles/Mounts"}),"\n",(0,t.jsx)(i.li,{children:"Pets"}),"\n",(0,t.jsx)(i.li,{children:"Consumables"}),"\n",(0,t.jsx)(i.li,{children:"Fractional Assets"}),"\n",(0,t.jsx)(i.li,{children:"Virtual Events"}),"\n",(0,t.jsx)(i.li,{children:"AR Overlays"}),"\n",(0,t.jsx)(i.li,{children:"Interactive Stories"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["Jump to the ",(0,t.jsx)(i.a,{href:"/recipes/future",children:"Future Recipes"})," to learn more about upcoming templates."]}),"\n",(0,t.jsx)(i.h2,{id:"contributing-new-recipes",children:"Contributing New Recipes"}),"\n",(0,t.jsx)(i.p,{children:"The MVMD Recipes section is designed to grow and evolve with the Metaverse ecosystem. We actively encourage contributions from:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Standards organizations"}),"\n",(0,t.jsx)(i.li,{children:"Platform developers"}),"\n",(0,t.jsx)(i.li,{children:"Content creators"}),"\n",(0,t.jsx)(i.li,{children:"Community members"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"To submit a new recipe or propose changes to existing ones:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Fork the ",(0,t.jsx)(i.a,{href:"https://github.com/mvmd-org/mvmd",children:"MVMD GitHub repository"})]}),"\n",(0,t.jsx)(i.li,{children:"Create a new branch for your recipe"}),"\n",(0,t.jsx)(i.li,{children:"Follow the recipe template structure"}),"\n",(0,t.jsx)(i.li,{children:"Submit a Pull Request for review"}),"\n",(0,t.jsx)(i.li,{children:"Engage in community discussion"}),"\n",(0,t.jsx)(i.li,{children:"Address feedback and revisions"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"All submissions are reviewed for:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Technical accuracy"}),"\n",(0,t.jsx)(i.li,{children:"Standards compliance"}),"\n",(0,t.jsx)(i.li,{children:"Implementation viability"}),"\n",(0,t.jsx)(i.li,{children:"Documentation quality"}),"\n",(0,t.jsx)(i.li,{children:"Community benefit"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(i.p,{children:["Start with our published ",(0,t.jsx)(i.a,{href:"/recipes/composable-3d-nft",children:"Composable 3D NFT Recipe"})," to understand how recipes combine multiple standards into practical implementation patterns. Monitor our GitHub repository for new recipe releases and opportunities to contribute to upcoming templates."]}),"\n",(0,t.jsxs)(i.p,{children:["For contributing organizations: review the ",(0,t.jsx)(i.a,{href:"/recipes/future",children:"Future Recipes"})," section to identify gaps and opportunities for new recipes that could benefit the broader Metaverse ecosystem."]}),"\n",(0,t.jsx)(i.p,{children:"Remember that recipes are living documents that will evolve as standards mature and new use cases emerge. Your contributions help build a more interoperable and robust Metaverse for everyone."})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>a});var s=n(6540);const t={},r=s.createContext(t);function l(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);