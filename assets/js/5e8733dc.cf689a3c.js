"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[355],{8773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"implementation/metadata-profiles","title":"Metadata Profiles","description":"Metadata profiles provide standardized templates for common Metaverse asset types.","source":"@site/docs/implementation/metadata-profiles.md","sourceDirName":"implementation","slug":"/implementation/metadata-profiles","permalink":"/implementation/metadata-profiles","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/implementation/metadata-profiles.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/implementation/getting-started"},"next":{"title":"Best Practices","permalink":"/implementation/best-practices"}}');var i=n(4848),r=n(8453);const o={sidebar_position:2},s="Metadata Profiles",l={},d=[{value:"Available Profiles",id:"available-profiles",level:2},{value:"3D Object Profile",id:"3d-object-profile",level:3},{value:"Avatar Profile",id:"avatar-profile",level:3},{value:"Environment Profile",id:"environment-profile",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"metadata-profiles",children:"Metadata Profiles"})}),"\n",(0,i.jsx)(t.p,{children:"Metadata profiles provide standardized templates for common Metaverse asset types."}),"\n",(0,i.jsx)(t.h2,{id:"available-profiles",children:"Available Profiles"}),"\n",(0,i.jsx)(t.h3,{id:"3d-object-profile",children:"3D Object Profile"}),"\n",(0,i.jsx)(t.p,{children:"Basic profile for 3D models and objects."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "gltf": "https://www.khronos.org/gltf/"\n  },\n  "@type": "3DModel",\n  "name": "Required: Asset name",\n  "description": "Required: Asset description",\n  "contentUrl": "Required: URL to the 3D model file",\n  "fileFormat": "Required: File format (e.g., \'model/gltf+json\')",\n  "creator": "Optional: Creator information",\n  "dateCreated": "Optional: Creation date",\n  "license": "Optional: License information",\n  "gltf:material": "Optional: Material properties",\n  "gltf:scale": "Optional: Scale information"\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"avatar-profile",children:"Avatar Profile"}),"\n",(0,i.jsx)(t.p,{children:"Profile for avatar assets and characteristics."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "@context": "https://schema.org/",\n  "@type": "VirtualCharacter",\n  "name": "Required: Avatar name",\n  "description": "Required: Avatar description",\n  "contentUrl": "Required: URL to avatar data",\n  "characteristics": {\n    "height": "Optional: Avatar height",\n    "bodyType": "Optional: Avatar body type",\n    "animations": "Optional: Available animations"\n  }\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"environment-profile",children:"Environment Profile"}),"\n",(0,i.jsx)(t.p,{children:"Profile for virtual environments and spaces."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "@context": "https://schema.org/",\n  "@type": "Place",\n  "name": "Required: Environment name",\n  "description": "Required: Environment description",\n  "contentUrl": "Required: URL to environment data",\n  "spatialCoverage": {\n    "type": "BoundingBox",\n    "coordinates": "Required: Spatial boundaries"\n  },\n  "capacity": "Optional: Maximum number of users",\n  "interactionMode": "Optional: Supported interaction modes"\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(6540);const i={},r=a.createContext(i);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);