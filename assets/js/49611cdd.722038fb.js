"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[1957],{8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},8555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"implementation/cross-platform-assets","title":"Cross-Platform Asset Implementation","description":"This guide covers implementing assets that work consistently across multiple metaverse platforms, with a focus on practical workflows rather than specific standards.","source":"@site/docs/implementation/cross-platform-assets.md","sourceDirName":"implementation","slug":"/implementation/cross-platform-assets","permalink":"/implementation/cross-platform-assets","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/implementation/cross-platform-assets.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"Assets","permalink":"/implementation/assets"},"next":{"title":"Interactive Assets","permalink":"/implementation/interactive-assets"}}');var a=t(4848),s=t(8453);const r={sidebar_position:4},o="Cross-Platform Asset Implementation",l={},m=[{value:"Use Cases",id:"use-cases",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Implementation Workflow",id:"implementation-workflow",level:2},{value:"1. Define Platform Requirements",id:"1-define-platform-requirements",level:3},{value:"2. Create Format-Specific Variations",id:"2-create-format-specific-variations",level:3},{value:"3. Implement Level of Detail (LOD) Variations",id:"3-implement-level-of-detail-lod-variations",level:3},{value:"4. Define Feature Fallbacks",id:"4-define-feature-fallbacks",level:3},{value:"5. Ensure Consistent Visual Identity",id:"5-ensure-consistent-visual-identity",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Implementation Considerations",id:"implementation-considerations",level:2},{value:"Platform-Specific Challenges",id:"platform-specific-challenges",level:3},{value:"Recommended Practices",id:"recommended-practices",level:3},{value:"Common Issues",id:"common-issues",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cross-platform-asset-implementation",children:"Cross-Platform Asset Implementation"})}),"\n",(0,a.jsx)(n.p,{children:"This guide covers implementing assets that work consistently across multiple metaverse platforms, with a focus on practical workflows rather than specific standards."}),"\n",(0,a.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,a.jsx)(n.p,{children:"Cross-platform asset implementation addresses these common scenarios:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Creating 3D assets that render correctly across multiple engines and platforms"}),"\n",(0,a.jsx)(n.li,{children:"Ensuring consistent behavior of interactive elements in different environments"}),"\n",(0,a.jsx)(n.li,{children:"Managing variations and fallbacks for platforms with different capabilities"}),"\n",(0,a.jsx)(n.li,{children:"Implementing platform-specific optimizations while maintaining a single source of truth"}),"\n",(0,a.jsx)(n.li,{children:"Supporting multiple file formats with consistent metadata"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(n.p,{children:"Before implementing cross-platform assets, ensure you have:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A clear understanding of your target platforms' requirements and limitations"}),"\n",(0,a.jsx)(n.li,{children:"Knowledge of supported file formats for each platform"}),"\n",(0,a.jsx)(n.li,{children:"Familiarity with basic MVMD metadata structure"}),"\n",(0,a.jsx)(n.li,{children:"Access to validation tools for each target platform"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"implementation-workflow",children:"Implementation Workflow"}),"\n",(0,a.jsx)(n.h3,{id:"1-define-platform-requirements",children:"1. Define Platform Requirements"}),"\n",(0,a.jsx)(n.p,{children:"Start by documenting requirements for each target platform:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Cross-Platform Chair",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "platformCompatibility",\n      "name": "Platform Compatibility",\n      "value": {\n        "platforms": [\n          {\n            "name": "platform-a",\n            "minVersion": "2.0",\n            "maxTextureSize": 2048,\n            "maxPolyCount": 20000,\n            "supportedFormats": ["glb", "usdz"],\n            "features": ["pbr-materials", "animations"]\n          },\n          {\n            "name": "platform-b",\n            "minVersion": "1.5",\n            "maxTextureSize": 1024,\n            "maxPolyCount": 10000,\n            "supportedFormats": ["glb"],\n            "features": ["basic-materials"]\n          },\n          {\n            "name": "platform-c",\n            "minVersion": "3.0",\n            "maxTextureSize": 4096,\n            "maxPolyCount": 50000,\n            "supportedFormats": ["usd", "glb"],\n            "features": ["pbr-materials", "animations", "physics"]\n          }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"2-create-format-specific-variations",children:"2. Create Format-Specific Variations"}),"\n",(0,a.jsx)(n.p,{children:"Provide multiple file formats to support different platforms:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Cross-Platform Chair",\n  "description": "Ergonomic chair with consistent appearance across platforms",\n  "encoding": [\n    {\n      "@type": "MediaObject",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://assets.example.com/chair.glb",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "targetPlatforms",\n          "value": ["platform-a", "platform-b"]\n        }\n      ]\n    },\n    {\n      "@type": "MediaObject",\n      "encodingFormat": "model/vnd.usd+zip",\n      "contentUrl": "https://assets.example.com/chair.usdz",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "targetPlatforms",\n          "value": ["platform-a", "platform-c"]\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"3-implement-level-of-detail-lod-variations",children:"3. Implement Level of Detail (LOD) Variations"}),"\n",(0,a.jsx)(n.p,{children:"Create different detail levels for various platform capabilities:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Cross-Platform Chair",\n  "description": "Ergonomic chair with multiple detail levels",\n  "workExample": [\n    {\n      "@type": "3DModel",\n      "name": "Chair - High Detail",\n      "contentUrl": "https://assets.example.com/chair-high.glb",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "technicalDetails",\n          "name": "Technical Details",\n          "value": {\n            "polyCount": 18000,\n            "textureSize": 2048,\n            "lod": 0,\n            "targetPlatforms": ["platform-a", "platform-c"]\n          }\n        }\n      ]\n    },\n    {\n      "@type": "3DModel",\n      "name": "Chair - Medium Detail",\n      "contentUrl": "https://assets.example.com/chair-medium.glb",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "technicalDetails",\n          "name": "Technical Details",\n          "value": {\n            "polyCount": 8000,\n            "textureSize": 1024,\n            "lod": 1,\n            "targetPlatforms": ["platform-b"]\n          }\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"4-define-feature-fallbacks",children:"4. Define Feature Fallbacks"}),"\n",(0,a.jsx)(n.p,{children:"Specify alternative behaviors when features aren't supported:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Interactive Chair",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "interactivity",\n      "name": "Interactive Features",\n      "value": {\n        "features": [\n          {\n            "name": "adjust-height",\n            "type": "animation",\n            "primaryImplementation": {\n              "method": "keyframe-animation",\n              "requires": ["animations"]\n            },\n            "fallback": {\n              "method": "static-position",\n              "description": "Fixed height on platforms without animation support"\n            }\n          },\n          {\n            "name": "physics-response",\n            "type": "physics",\n            "primaryImplementation": {\n              "method": "rigid-body-physics",\n              "requires": ["physics"]\n            },\n            "fallback": {\n              "method": "none",\n              "description": "No physical response on platforms without physics"\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"5-ensure-consistent-visual-identity",children:"5. Ensure Consistent Visual Identity"}),"\n",(0,a.jsx)(n.p,{children:"Maintain visual consistency while accommodating platform differences:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Cross-Platform Chair",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "visualIdentity",\n      "name": "Visual Identity",\n      "value": {\n        "brandColors": {\n          "primary": "#003366",\n          "secondary": "#CC9900",\n          "accent": "#FFFFFF"\n        },\n        "materialMapping": [\n          {\n            "name": "fabric",\n            "pbr": {\n              "baseColor": "#003366",\n              "metallic": 0,\n              "roughness": 0.8\n            },\n            "basic": {\n              "diffuse": "#003366"\n            }\n          },\n          {\n            "name": "metal",\n            "pbr": {\n              "baseColor": "#EEEEEE",\n              "metallic": 0.9,\n              "roughness": 0.1\n            },\n            "basic": {\n              "diffuse": "#CCCCCC",\n              "specular": "#FFFFFF"\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,a.jsx)(n.p,{children:"A comprehensive cross-platform asset implementation:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "gltf": "https://www.khronos.org/gltf/",\n    "usd": "https://openusd.org/schemas/"\n  },\n  "@type": "3DModel",\n  "name": "Ergonomic Office Chair",\n  "description": "Modern office chair with adjustable height and consistent cross-platform appearance",\n  "creator": {\n    "@type": "Organization",\n    "name": "Virtual Furnishings Inc.",\n    "url": "https://virtualfurnishings.example.com"\n  },\n  "license": "https://creativecommons.org/licenses/by/4.0/",\n  "image": "https://assets.example.com/chair-preview.jpg",\n  \n  "encoding": [\n    {\n      "@type": "MediaObject",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://assets.example.com/chair-high.glb",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "targetPlatforms",\n          "value": ["platform-a", "platform-c"]\n        }\n      ]\n    },\n    {\n      "@type": "MediaObject",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://assets.example.com/chair-medium.glb",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "targetPlatforms",\n          "value": ["platform-b"]\n        }\n      ]\n    },\n    {\n      "@type": "MediaObject",\n      "encodingFormat": "model/vnd.usd+zip",\n      "contentUrl": "https://assets.example.com/chair.usdz",\n      "additionalProperty": [\n        {\n          "@type": "PropertyValue",\n          "propertyID": "targetPlatforms",\n          "value": ["platform-a"]\n        }\n      ]\n    }\n  ],\n  \n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "platformCompatibility",\n      "name": "Platform Compatibility",\n      "value": {\n        "platforms": [\n          {\n            "name": "platform-a",\n            "minVersion": "2.0",\n            "maxTextureSize": 2048,\n            "maxPolyCount": 20000,\n            "supportedFormats": ["glb", "usdz"],\n            "features": ["pbr-materials", "animations"]\n          },\n          {\n            "name": "platform-b",\n            "minVersion": "1.5",\n            "maxTextureSize": 1024,\n            "maxPolyCount": 10000,\n            "supportedFormats": ["glb"],\n            "features": ["basic-materials"]\n          },\n          {\n            "name": "platform-c",\n            "minVersion": "3.0",\n            "maxTextureSize": 4096,\n            "maxPolyCount": 50000,\n            "supportedFormats": ["usd", "glb"],\n            "features": ["pbr-materials", "animations", "physics"]\n          }\n        ]\n      }\n    },\n    {\n      "@type": "PropertyValue",\n      "propertyID": "interactivity",\n      "name": "Interactive Features",\n      "value": {\n        "features": [\n          {\n            "name": "adjust-height",\n            "type": "animation",\n            "primaryImplementation": {\n              "method": "keyframe-animation",\n              "requires": ["animations"]\n            },\n            "fallback": {\n              "method": "static-position",\n              "description": "Fixed height on platforms without animation support"\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \n  "gltf:asset": {\n    "version": "2.0",\n    "generator": "Studio Modeler 2024"\n  },\n  \n  "usd:stage": {\n    "upAxis": "Y",\n    "metersPerUnit": 0.01\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,a.jsx)(n.h3,{id:"platform-specific-challenges",children:"Platform-Specific Challenges"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Material Differences"}),": PBR materials may not translate consistently to platforms with basic material support"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Animation Support"}),": Animation behaviors can vary significantly between platforms"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Physics Implementation"}),": Physics systems have different constraints and behaviors"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Performance Variations"}),": Similar assets can perform differently across platforms"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Content Policies"}),": Some platforms have restrictions on certain content types"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"recommended-practices",children:"Recommended Practices"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Test assets on each target platform before final deployment"}),"\n",(0,a.jsx)(n.li,{children:"Create a visual style guide to ensure consistent representation"}),"\n",(0,a.jsx)(n.li,{children:"Document platform-specific requirements in your metadata"}),"\n",(0,a.jsx)(n.li,{children:"Validate assets against each platform's requirements"}),"\n",(0,a.jsx)(n.li,{children:"Build progressive enhancement into your design approach"}),"\n",(0,a.jsx)(n.li,{children:"Use MVMD namespaces specific to each format for detailed configuration"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Inconsistent lighting"}),": Different rendering engines handle materials differently"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Animation timing"}),": Animation systems may run at different rates"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Scale variations"}),": Units and scale might be interpreted differently"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Missing features"}),": Not all platforms support the same feature set"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Permission differences"}),": Access controls may vary between platforms"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/implementation/assets",children:"Basic Asset Implementation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/implementation/interactive-assets",children:"Interactive Asset Implementation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/standards/gltf",children:"glTF"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/standards/usd",children:"USD"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/tools/validator",children:"Validation Tools"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);