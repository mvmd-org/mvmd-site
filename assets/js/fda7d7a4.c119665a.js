"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[1365],{896:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"contributors/overview","title":"Overview","description":"Overview","source":"@site/docs/contributors/overview.md","sourceDirName":"contributors","slug":"/contributors/overview","permalink":"/contributors/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/contributors/overview.md","tags":[],"version":"current","frontMatter":{"title":"Overview","sidebar_label":"Overview"},"sidebar":"docs","previous":{"title":"Glossary","permalink":"/reference/glossary"},"next":{"title":"Overview","permalink":"/contributors/developers/overview"}}');var t=n(4848),r=n(8453);const o={title:"Overview",sidebar_label:"Overview"},l="Contributors Overview",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Ways to Contribute",id:"ways-to-contribute",level:2},{value:"Contribution Process",id:"contribution-process",level:2},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Getting Started Contributing",id:"getting-started-contributing",level:2},{value:"Get in Touch",id:"get-in-touch",level:2}];function a(e){const i={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"contributors-overview",children:"Contributors Overview"})}),"\n",(0,t.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(i.p,{children:"The Metaverse Metadata Directory (MVMD) is an open, collaborative project. We welcome contributions from individuals, organizations, and standards bodies to help improve the framework, documentation, and tools."}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsxs)(i.em,{children:["The initial MVMD concept and versions were authored by Grig Bilham from ",(0,t.jsx)(i.a,{href:"./supporters/sumset-tech",children:"Metaverse Standards Forum"}),"."]})}),"\n",(0,t.jsx)(i.h2,{id:"ways-to-contribute",children:"Ways to Contribute"}),"\n",(0,t.jsx)(i.p,{children:"You can contribute in various ways:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Documentation"}),": Improve clarity, add examples, fix errors, translate content, or suggest new sections."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Integration Profiles"}),": Propose new profiles, enhance existing ones, or identify gaps."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Technical Contributions"}),": Develop validation tools, create examples, fix bugs, add features, or improve tests."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Community Engagement"}),": Participate in discussions, share experiences, help others, organize workshops, or write articles."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"contribution-process",children:"Contribution Process"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Identify Contribution"}),": Check existing issues or discussions on GitHub to avoid duplication."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Prepare"}),":","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.em,{children:"Code/Docs"}),": Fork the repository, create a branch, make changes."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.em,{children:"New Profiles/Ideas"}),": Create a detailed proposal or GitHub issue first."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Submit"}),":","\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Use GitHub Issues for bug reports and feature requests."}),"\n",(0,t.jsx)(i.li,{children:"Use Pull Requests for code and documentation changes."}),"\n",(0,t.jsx)(i.li,{children:"Use community forums/Discord for discussion."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Review"}),": The team will review your submission and provide feedback. Approved contributions will be merged."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"development-guidelines",children:"Development Guidelines"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Code"}),": Follow existing style, include tests, update relevant docs, keep commits focused."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Profiles"}),": Start with a clear use case, define relationships/rules, provide examples."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"getting-started-contributing",children:"Getting Started Contributing"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Setup"}),": Fork/clone the ",(0,t.jsx)(i.a,{href:"https://github.com/mvmd-org/mvmd-site",children:"MVMD repository on GitHub"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"First Task"}),": Pick a small task (fix typo, improve docs, add example)."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Engage"}),": Join community discussions on GitHub to ask questions and get feedback."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"get-in-touch",children:"Get in Touch"}),"\n",(0,t.jsxs)(i.p,{children:["Have ideas or want to contribute? Reach out to us on GitHub by ",(0,t.jsx)(i.a,{href:"https://github.com/mvmd-org/mvmd-site/issues/new",children:"opening an issue"})," to start the conversation."]}),"\n",(0,t.jsx)(i.p,{children:"We appreciate your help in making MVMD a robust standard for the metaverse!"})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>l});var s=n(6540);const t={},r=s.createContext(t);function o(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);