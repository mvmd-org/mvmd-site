"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[2084],{3449:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"standards/3d-tiles","title":"3D Tiles","description":"This page covers how to integrate 3D Tiles into your metadata through namespaces.","source":"@site/docs/standards/3d-tiles.md","sourceDirName":"standards","slug":"/standards/3d-tiles","permalink":"/standards/3d-tiles","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/standards/3d-tiles.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"docs","previous":{"title":"CityJSON","permalink":"/standards/cityjson"},"next":{"title":"C2PA","permalink":"/standards/c2pa"}}');var s=t(4848),a=t(8453);const r={sidebar_position:11},o="3D Tiles",l={},d=[{value:"About 3D Tiles",id:"about-3d-tiles",level:2},{value:"Core 3D Tiles Concepts",id:"core-3d-tiles-concepts",level:2},{value:"Implementing the 3D Tiles Standard",id:"implementing-the-3d-tiles-standard",level:2},{value:"Namespace Declaration",id:"namespace-declaration",level:3},{value:"Linking Example",id:"linking-example",level:3},{value:"Embedding Example",id:"embedding-example",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Complete Example",id:"complete-example",level:3},{value:"Smart City Example",id:"smart-city-example",level:3},{value:"JSON Schema Validation",id:"json-schema-validation",level:2},{value:"JSON-LD Context",id:"json-ld-context",level:2},{value:"Implementation Considerations",id:"implementation-considerations",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"3d-tiles",children:"3D Tiles"})}),"\n",(0,s.jsx)(n.p,{children:"This page covers how to integrate 3D Tiles into your metadata through namespaces."}),"\n",(0,s.jsx)(n.h2,{id:"about-3d-tiles",children:"About 3D Tiles"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.ogc.org/standards/3DTiles",children:"3D Tiles"})," is an open standard for streaming massive heterogeneous 3D geospatial datasets. Developed by Cesium and adopted as an Open Geospatial Consortium (OGC) Community Standard, 3D Tiles defines a spatial data structure and a set of tile formats designed to efficiently stream and render massive 3D geospatial content such as terrain, buildings, photogrammetry, and point clouds."]}),"\n",(0,s.jsx)(n.p,{children:"3D Tiles enables streaming and rendering of large-scale 3D geospatial data across devices and platforms by implementing a hierarchical level of detail structure that allows clients to request only the necessary data based on the current view position, orientation, and zoom level."}),"\n",(0,s.jsx)(n.h2,{id:"core-3d-tiles-concepts",children:"Core 3D Tiles Concepts"}),"\n",(0,s.jsx)(n.p,{children:"Key concepts in 3D Tiles that are relevant to metadata integration:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tileset"}),": Hierarchical structure of tiles with level-of-detail capability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tile Formats"}),": Specific formats for different content types (b3dm, i3dm, pnts, cmpt)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bounding Volumes"}),": Spatial boundaries for efficient culling and selection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Refinement"}),": Replacement or additive strategies for level of detail"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Metadata"}),": Asset, feature, and content property information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Styling"}),": Runtime styling capabilities based on feature properties"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Batched Content"}),": Multiple objects grouped together for efficient rendering"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Instanced Content"}),": Repeated elements like trees, furniture, etc."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementing-the-3d-tiles-standard",children:"Implementing the 3D Tiles Standard"}),"\n",(0,s.jsx)(n.h3,{id:"namespace-declaration",children:"Namespace Declaration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "3dtiles": "https://www.ogc.org/standards/3DTiles/schemas/"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"linking-example",children:"Linking Example"}),"\n",(0,s.jsx)(n.p,{children:"When referencing external 3D Tiles assets:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "Dataset",\n  "name": "City Buildings Tileset",\n  "contentUrl": "https://example.com/tilesets/city/tileset.json",\n  "encodingFormat": "application/json;type=3dtiles"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"With version and detailed information:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "Dataset",\n  "name": "City Buildings Tileset",\n  "contentUrl": "https://example.com/tilesets/city/tileset.json",\n  "encodingFormat": "application/json;type=3dtiles",\n  "version": "1.1",\n  "spatialCoverage": {\n    "@type": "GeoShape",\n    "box": "40.730610,-73.935242 40.753182,-73.981903"\n  },\n  "contentSize": "2.5 GB",\n  "dateCreated": "2023-05-15"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"embedding-example",children:"Embedding Example"}),"\n",(0,s.jsx)(n.p,{children:"When embedding 3D Tiles metadata directly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "3dtiles": "https://www.ogc.org/standards/3DTiles/schemas/"\n  },\n  "@type": "Dataset",\n  "name": "City Buildings Tileset",\n  "3dtiles:version": "1.1",\n  "3dtiles:asset": {\n    "version": "1.1",\n    "tilesetVersion": "2.0",\n    "gltfUpAxis": "Z"\n  },\n  "3dtiles:geometricError": 500,\n  "3dtiles:root": {\n    "boundingVolume": {\n      "region": [\n        -1.3197209591796106,\n        0.6988424910858092,\n        -1.3196390408203893,\n        0.6989055089141921,\n        0,\n        500\n      ]\n    },\n    "geometricError": 100,\n    "refine": "ADD",\n    "children": 8\n  },\n  "3dtiles:properties": {\n    "maximum": {\n      "height": 300,\n      "area": 15000,\n      "buildingYear": 2023\n    },\n    "minimum": {\n      "height": 1,\n      "area": 10,\n      "buildingYear": 1850\n    }\n  },\n  "3dtiles:contentTypes": ["b3dm", "pnts", "i3dm"],\n  "3dtiles:statistics": {\n    "tileCount": 5428,\n    "pointCount": 50000000,\n    "featureCount": 25000,\n    "maxDepth": 20\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,s.jsx)(n.p,{children:"3D Tiles is used in a variety of geospatial applications:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Smart city visualization"}),"\n",(0,s.jsx)(n.li,{children:"Urban planning and analysis"}),"\n",(0,s.jsx)(n.li,{children:"Digital twin creation for cities and infrastructure"}),"\n",(0,s.jsx)(n.li,{children:"Real estate development visualization"}),"\n",(0,s.jsx)(n.li,{children:"Infrastructure asset management"}),"\n",(0,s.jsx)(n.li,{children:"Environmental monitoring and analysis"}),"\n",(0,s.jsx)(n.li,{children:"Cultural heritage preservation"}),"\n",(0,s.jsx)(n.li,{children:"Disaster response planning"}),"\n",(0,s.jsx)(n.li,{children:"Transportation planning and simulation"}),"\n",(0,s.jsx)(n.li,{children:"Augmented reality for geospatial contexts"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,s.jsx)(n.p,{children:"A simple 3D Tiles tileset reference:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "Dataset",\n  "name": "Downtown Buildings 3D Model",\n  "description": "3D Tiles dataset of downtown buildings with height and construction year attributes",\n  "contentUrl": "https://example.com/tilesets/downtown/tileset.json",\n  "encodingFormat": "application/json;type=3dtiles",\n  "license": "https://creativecommons.org/licenses/by/4.0/",\n  "dateCreated": "2023-03-12"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,s.jsx)(n.p,{children:"For a complete 3D Tiles dataset with detailed metadata:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "3dtiles": "https://www.ogc.org/standards/3DTiles/schemas/"\n  },\n  "@type": "Dataset",\n  "name": "Metropolitan Area Digital Twin",\n  "description": "Comprehensive 3D tileset of the metropolitan area including buildings, terrain, vegetation, and infrastructure",\n  "contentUrl": "https://example.com/tilesets/metro-area/tileset.json",\n  "encodingFormat": "application/json;type=3dtiles",\n  "creator": {\n    "@type": "Organization",\n    "name": "Geospatial Digital Twin Consortium",\n    "url": "https://geospatial-dtc.example.org"\n  },\n  "license": "https://creativecommons.org/licenses/by-nc/4.0/",\n  "dateCreated": "2023-02-18",\n  "dateModified": "2023-08-05",\n  "spatialCoverage": {\n    "@type": "GeoShape",\n    "box": "34.0522,-118.2437 34.1522,-118.1437"\n  },\n  "contentSize": "4.8 GB",\n  "3dtiles:version": "1.1",\n  "3dtiles:asset": {\n    "version": "1.1",\n    "tilesetVersion": "2.3",\n    "gltfUpAxis": "Z"\n  },\n  "3dtiles:schema": {\n    "classes": {\n      "building": {\n        "properties": {\n          "height": {"type": "FLOAT64"},\n          "area": {"type": "FLOAT64"},\n          "buildingType": {"type": "STRING"},\n          "constructionYear": {"type": "INT32"},\n          "energyRating": {"type": "STRING"},\n          "occupancy": {"type": "STRING"},\n          "hasUnderground": {"type": "BOOLEAN"}\n        }\n      },\n      "vegetation": {\n        "properties": {\n          "height": {"type": "FLOAT32"},\n          "species": {"type": "STRING"},\n          "crownDiameter": {"type": "FLOAT32"},\n          "age": {"type": "INT16"}\n        }\n      },\n      "road": {\n        "properties": {\n          "type": {"type": "STRING"},\n          "width": {"type": "FLOAT32"},\n          "material": {"type": "STRING"},\n          "lanes": {"type": "INT8"}\n        }\n      }\n    }\n  },\n  "3dtiles:metadata": {\n    "tilesetSource": "Combined photogrammetry, LiDAR, and GIS data",\n    "captureDate": "2022-11-15 to 2023-01-20",\n    "processingSoftware": "Geospatial Processing Suite 4.5",\n    "coordinateSystem": "EPSG:4326",\n    "verticalDatum": "NAVD88",\n    "positionalAccuracy": "0.15m horizontal, 0.25m vertical",\n    "tilesetContact": "support@geospatial-dtc.example.org"\n  },\n  "3dtiles:layers": [\n    {\n      "name": "buildings",\n      "description": "3D buildings with attributes",\n      "contentType": "b3dm",\n      "featureCount": 25430,\n      "attributes": ["height", "buildingType", "constructionYear"]\n    },\n    {\n      "name": "terrain",\n      "description": "Detailed terrain mesh",\n      "contentType": "cmpt",\n      "resolution": "0.5m"\n    },\n    {\n      "name": "vegetation",\n      "description": "Trees and other vegetation",\n      "contentType": "i3dm",\n      "featureCount": 156280,\n      "attributes": ["height", "species"]\n    },\n    {\n      "name": "pointclouds",\n      "description": "LiDAR point clouds for select areas",\n      "contentType": "pnts",\n      "pointCount": 78500000,\n      "pointSpacing": "0.1m"\n    }\n  ],\n  "3dtiles:extensions": [\n    "3DTILES_implicit_tiling",\n    "3DTILES_metadata",\n    "3DTILES_content_gltf"\n  ],\n  "3dtiles:statistics": {\n    "tileCount": 18254,\n    "maxDepth": 22,\n    "totalByteSize": 4.8e9,\n    "maximumTriangleCount": 12000000,\n    "maximumPointCount": 78500000\n  },\n  "3dtiles:optimizationFeatures": {\n    "preloadAncestors": true,\n    "unloadSkippedLevels": true,\n    "skipLevelOfDetail": true,\n    "maximumScreenSpaceError": 16\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"smart-city-example",children:"Smart City Example"}),"\n",(0,s.jsx)(n.p,{children:"Example for smart city application with analytics properties:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "3dtiles": "https://www.ogc.org/standards/3DTiles/schemas/"\n  },\n  "@type": "Dataset",\n  "name": "Smart City Dashboard 3D Assets",\n  "description": "Interactive 3D representation of city assets with real-time sensor data integration",\n  "contentUrl": "https://smartcity.example.org/tilesets/dashboard/tileset.json",\n  "encodingFormat": "application/json;type=3dtiles",\n  "creator": {\n    "@type": "Organization",\n    "name": "Smart City Initiative",\n    "url": "https://smartcity.example.org"\n  },\n  "license": "https://creativecommons.org/licenses/by-sa/4.0/",\n  "dateCreated": "2023-05-28",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "analyticsIntegration",\n      "name": "Analytics Integration",\n      "value": {\n        "dataIntegrationAPI": "https://smartcity.example.org/api/v2/",\n        "realTimeDataSources": [\n          {\n            "name": "trafficSensors",\n            "updateFrequency": "30s",\n            "coverage": "major roads and intersections",\n            "visualizationType": "color coding and flow lines"\n          },\n          {\n            "name": "airQualitySensors",\n            "updateFrequency": "5min",\n            "coverage": "citywide grid at 500m intervals",\n            "visualizationType": "heat map overlay"\n          },\n          {\n            "name": "energyConsumption",\n            "updateFrequency": "15min",\n            "coverage": "all municipal buildings and 60% of commercial buildings",\n            "visualizationType": "building color and glow effects"\n          },\n          {\n            "name": "pedestrianActivity",\n            "updateFrequency": "5min",\n            "coverage": "downtown and commercial districts",\n            "visualizationType": "dynamic dot density"\n          }\n        ],\n        "historicalDataAccess": "https://smartcity.example.org/api/v2/historical/",\n        "predictionModels": [\n          "traffic flow prediction",\n          "energy demand forecasting",\n          "air quality prediction"\n        ]\n      }\n    }\n  ],\n  "3dtiles:version": "1.1",\n  "3dtiles:asset": {\n    "version": "1.1",\n    "tilesetVersion": "3.2",\n    "gltfUpAxis": "Z"\n  },\n  "3dtiles:extensions": [\n    "3DTILES_metadata",\n    "3DTILES_implicit_tiling",\n    "3DTILES_time_dynamic_points"\n  ],\n  "3dtiles:styling": {\n    "styles": [\n      {\n        "name": "default",\n        "description": "Standard city visualization"\n      },\n      {\n        "name": "trafficAnalysis",\n        "description": "Road network colored by traffic volume"\n      },\n      {\n        "name": "energyEfficiency",\n        "description": "Buildings colored by energy consumption"\n      },\n      {\n        "name": "airQuality",\n        "description": "Air quality overlay on city model"\n      },\n      {\n        "name": "solarPotential",\n        "description": "Building rooftops colored by solar energy potential"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"json-schema-validation",children:"JSON Schema Validation"}),"\n",(0,s.jsx)(n.p,{children:"For validating 3D Tiles namespace references in MVMD, the following schema properties are defined:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "title": "3D Tiles Namespace Schema",\n  "type": "object",\n  "properties": {\n    "3dtiles:version": {\n      "type": "string",\n      "description": "3D Tiles specification version"\n    },\n    "3dtiles:asset": {\n      "type": "object",\n      "description": "Asset information about the tileset",\n      "properties": {\n        "version": { "type": "string" },\n        "tilesetVersion": { "type": "string" },\n        "gltfUpAxis": { \n          "type": "string",\n          "enum": ["X", "Y", "Z"]\n        }\n      }\n    },\n    "3dtiles:geometricError": {\n      "type": "number",\n      "description": "The error, in meters, introduced if this tileset is not rendered"\n    },\n    "3dtiles:root": {\n      "type": "object",\n      "description": "Information about the root tile"\n    },\n    "3dtiles:properties": {\n      "type": "object",\n      "description": "Object containing property values for the tileset"\n    },\n    "3dtiles:contentTypes": {\n      "type": "array",\n      "description": "Tile content types used in the tileset",\n      "items": { \n        "type": "string",\n        "enum": ["b3dm", "i3dm", "pnts", "cmpt", "gltf", "glb"]\n      }\n    },\n    "3dtiles:schema": {\n      "type": "object",\n      "description": "Schema for feature metadata in the tileset"\n    },\n    "3dtiles:metadata": {\n      "type": "object",\n      "description": "Additional metadata about the tileset"\n    },\n    "3dtiles:layers": {\n      "type": "array",\n      "description": "Layers or feature types in the tileset",\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": { "type": "string" },\n          "description": { "type": "string" },\n          "contentType": { "type": "string" }\n        },\n        "required": ["name"]\n      }\n    },\n    "3dtiles:extensions": {\n      "type": "array",\n      "description": "3D Tiles extensions used in the tileset",\n      "items": { "type": "string" }\n    },\n    "3dtiles:statistics": {\n      "type": "object",\n      "description": "Statistical information about the tileset"\n    },\n    "3dtiles:optimizationFeatures": {\n      "type": "object",\n      "description": "Optional features for client-side optimization"\n    },\n    "3dtiles:styling": {\n      "type": "object",\n      "description": "Styling options for the tileset"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"json-ld-context",children:"JSON-LD Context"}),"\n",(0,s.jsx)(n.p,{children:"The 3D Tiles namespace can be mapped to JSON-LD context for semantic interoperability:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "3dtiles": "https://www.ogc.org/standards/3DTiles/schemas/",\n    "3dtiles:version": { "@id": "3dtiles:version" },\n    "3dtiles:asset": { "@id": "3dtiles:asset" },\n    "3dtiles:geometricError": { "@id": "3dtiles:geometricError" },\n    "3dtiles:root": { "@id": "3dtiles:root" },\n    "3dtiles:properties": { "@id": "3dtiles:properties" },\n    "3dtiles:contentTypes": { "@id": "3dtiles:contentTypes" },\n    "3dtiles:schema": { "@id": "3dtiles:schema" },\n    "3dtiles:metadata": { "@id": "3dtiles:metadata" },\n    "3dtiles:layers": { "@id": "3dtiles:layers" },\n    "3dtiles:extensions": { "@id": "3dtiles:extensions" },\n    "3dtiles:statistics": { "@id": "3dtiles:statistics" },\n    "3dtiles:optimizationFeatures": { "@id": "3dtiles:optimizationFeatures" },\n    "3dtiles:styling": { "@id": "3dtiles:styling" }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,s.jsx)(n.p,{children:"When implementing the 3D Tiles namespace, keep these considerations in mind:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Client Support"}),": Ensure target client applications support the 3D Tiles version used"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Streaming Performance"}),": Balance tile size and detail for optimal streaming performance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Level of Detail"}),": Configure appropriate geometric error values for view-dependent LOD"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Feature Metadata"}),": Design a clear schema for searchable and filterable feature attributes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensions"}),": Document any extensions used to ensure client compatibility"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Styling"}),": Consider runtime styling needs when structuring the tileset"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Coordinate Systems"}),": Be explicit about the coordinate system and vertical datum"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Size"}),": Implement appropriate optimizations for large datasets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Integration"}),": Plan for integration with other data sources like real-time sensors"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/standards/cityjson",children:"CityJSON Namespace"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/integration-profiles/digital-twin",children:"Digital Twin Integration Profile"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/integration-profiles/scene",children:"Scene Integration Profile"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/implementation/discovery-optimization",children:"Discovery and Search Optimization"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);