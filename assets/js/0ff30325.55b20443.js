"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[2960],{7939:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"concepts/metadata/structure","title":"Metadata Structure","description":"Proper organization of metadata ensures clear relationships, efficient loading, and consistent naming patterns. This guide covers key principles for structuring your metadata.","source":"@site/docs/concepts/metadata/structure.md","sourceDirName":"concepts/metadata","slug":"/concepts/metadata/structure","permalink":"/concepts/metadata/structure","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/concepts/metadata/structure.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Fundamentals","permalink":"/concepts/metadata/fundamentals"},"next":{"title":"Schema.org","permalink":"/concepts/metadata/schema-org"}}');var r=t(4848),s=t(8453);const a={sidebar_position:2},o="Metadata Structure",l={},c=[{value:"Namespace and Type Declarations",id:"namespace-and-type-declarations",level:2},{value:"Type Requirements",id:"type-requirements",level:3},{value:"Hierarchical Organization",id:"hierarchical-organization",level:2},{value:"Entry Point Pattern",id:"entry-point-pattern",level:3},{value:"Component Organization",id:"component-organization",level:3},{value:"Property Naming Conventions",id:"property-naming-conventions",level:2},{value:"Schema.org Properties",id:"schemaorg-properties",level:3},{value:"Custom Properties",id:"custom-properties",level:3},{value:"Multi-Standard Integration",id:"multi-standard-integration",level:2},{value:"File Storage Considerations",id:"file-storage-considerations",level:2},{value:"Effective Organization",id:"effective-organization",level:3},{value:"File Format Recommendations",id:"file-format-recommendations",level:3},{value:"Optimization Strategies",id:"optimization-strategies",level:2},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Maintainability Practices",id:"maintainability-practices",level:3},{value:"Related Concepts",id:"related-concepts",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"metadata-structure",children:"Metadata Structure"})}),"\n",(0,r.jsx)(n.p,{children:"Proper organization of metadata ensures clear relationships, efficient loading, and consistent naming patterns. This guide covers key principles for structuring your metadata."}),"\n",(0,r.jsx)(n.h2,{id:"namespace-and-type-declarations",children:"Namespace and Type Declarations"}),"\n",(0,r.jsx)(n.p,{children:"Every object in your metadata should have clear type declarations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "gltf": "https://www.khronos.org/gltf/"\n  },\n  "@type": "ImageObject",\n  "name": "Asset Preview"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"type-requirements",children:"Type Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main Objects"}),": Every top-level object needs an ",(0,r.jsx)(n.code,{children:"@type"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nested Objects"}),": All nested objects should have appropriate types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Arrays"}),": Each object in an array should declare its type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Namespaced Objects"}),": Use proper namespaced types where applicable"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hierarchical-organization",children:"Hierarchical Organization"}),"\n",(0,r.jsx)(n.h3,{id:"entry-point-pattern",children:"Entry Point Pattern"}),"\n",(0,r.jsx)(n.p,{children:"Use an ImageObject as the main entry point, especially for preview-focused metadata:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "ImageObject",\n  "name": "Asset Preview",\n  "contentUrl": "https://example.com/preview.jpg",\n  "mainEntity": {\n    "@type": "3DModel",\n    "name": "3D Asset",\n    "contentUrl": "https://example.com/model.glb"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"component-organization",children:"Component Organization"}),"\n",(0,r.jsxs)(n.p,{children:["For complex, multi-part assets, organize components clearly with ",(0,r.jsx)(n.code,{children:"hasPart"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Modular Asset",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Main Body",\n      "contentUrl": "https://example.com/body.glb"\n    },\n    {\n      "@type": "3DModel",\n      "name": "Accessories",\n      "contentUrl": "https://example.com/accessories.glb"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"property-naming-conventions",children:"Property Naming Conventions"}),"\n",(0,r.jsx)(n.h3,{id:"schemaorg-properties",children:"Schema.org Properties"}),"\n",(0,r.jsx)(n.p,{children:"Use standard Schema.org properties whenever possible:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," for titles"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"description"})," for descriptions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contentUrl"})," for direct URLs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"encodingFormat"})," for MIME types"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"custom-properties",children:"Custom Properties"}),"\n",(0,r.jsx)(n.p,{children:"For custom data, follow these patterns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"camelCase"})," for property IDs"]}),"\n",(0,r.jsx)(n.li,{children:"Be consistent with naming patterns"}),"\n",(0,r.jsx)(n.li,{children:"Group related properties together"}),"\n",(0,r.jsx)(n.li,{children:"Document custom property meanings"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "renderQuality",\n      "name": "Render Quality",\n      "value": "high"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"multi-standard-integration",children:"Multi-Standard Integration"}),"\n",(0,r.jsx)(n.p,{children:"When combining multiple standards, maintain clear organization:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "gltf": "https://www.khronos.org/gltf/",\n    "vrm": "https://vrm.dev/specifications/"\n  },\n  "@type": "3DModel",\n  "name": "Avatar Model",\n  \n  // Core Schema.org properties\n  "contentUrl": "https://example.com/avatar.glb",\n  "encodingFormat": "model/gltf-binary",\n  \n  // Namespaced properties for specific standards\n  "gltf:materials": [\n    {\n      "name": "Skin",\n      "pbrMetallicRoughness": {\n        "baseColorFactor": [0.8, 0.7, 0.6, 1.0]\n      }\n    }\n  ],\n  \n  "vrm:humanoid": {\n    "humanBones": {\n      "hips": { "node": 1 },\n      "spine": { "node": 2 }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"file-storage-considerations",children:"File Storage Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"effective-organization",children:"Effective Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related Files"}),": Keep related files in the same directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Logical Naming"}),": Use consistent, meaningful file names"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Versioning"}),": Include version information when appropriate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paths"}),": Use relative paths where possible for portability"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"file-format-recommendations",children:"File Format Recommendations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Metadata"}),": Use .json for metadata files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Use .md or .html for documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assets"}),": Use standard formats for 3D, image, and other content"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"optimization-strategies",children:"Optimization Strategies"}),"\n",(0,r.jsx)(n.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Balance between embedding and linking"}),"\n",(0,r.jsx)(n.li,{children:"Use progressive loading for large assets"}),"\n",(0,r.jsx)(n.li,{children:"Optimize file organization for caching"}),"\n",(0,r.jsx)(n.li,{children:"Consider platform-specific implementations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"maintainability-practices",children:"Maintainability Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Document relationships between components"}),"\n",(0,r.jsx)(n.li,{children:"Use consistent naming and organization"}),"\n",(0,r.jsx)(n.li,{children:"Create clear hierarchies of components"}),"\n",(0,r.jsx)(n.li,{children:"Label versions appropriately"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-concepts",children:"Related Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/concepts/metadata/fundamentals",children:"Fundamentals"}),": Core principles of metadata structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../types-of-assets.md",children:"Types of Assets"}),": Schema.org types for different assets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/concepts/linking-vs-embedding",children:"Linking vs Embedding"}),": Strategies for referencing content"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);