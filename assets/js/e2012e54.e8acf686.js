"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[3511],{2568:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"standards/openxr","title":"OpenXR","description":"This page covers how to integrate OpenXR standards into your metadata through namespaces.","source":"@site/docs/standards/openxr.md","sourceDirName":"standards","slug":"/standards/openxr","permalink":"/standards/openxr","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/standards/openxr.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docs","previous":{"title":"C2PA","permalink":"/standards/c2pa"},"next":{"title":"Overview","permalink":"/implementation/overview"}}');var s=i(4848),t=i(8453);const o={sidebar_position:6},a="OpenXR",l={},c=[{value:"Overview and Use Cases",id:"overview-and-use-cases",level:2},{value:"Core Properties and Extensions",id:"core-properties-and-extensions",level:2},{value:"Namespace Declaration",id:"namespace-declaration",level:2},{value:"External Reference Patterns",id:"external-reference-patterns",level:2},{value:"Embedding Patterns",id:"embedding-patterns",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Implementation Considerations",id:"implementation-considerations",level:2},{value:"Related Concepts",id:"related-concepts",level:2},{value:"Practical Implementation Guide",id:"practical-implementation-guide",level:2},{value:"Step 1: Basic XR Application Setup",id:"step-1-basic-xr-application-setup",level:3},{value:"Step 2: Hardware and Platform Configuration",id:"step-2-hardware-and-platform-configuration",level:3},{value:"Step 3: Input and Interaction Configuration",id:"step-3-input-and-interaction-configuration",level:3},{value:"Step 4: User Experience and Comfort Settings",id:"step-4-user-experience-and-comfort-settings",level:3},{value:"Step 5: Platform-Specific Implementation",id:"step-5-platform-specific-implementation",level:3},{value:"Best Practices for Implementation",id:"best-practices-for-implementation",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"openxr",children:"OpenXR"})}),"\n",(0,s.jsx)(e.p,{children:"This page covers how to integrate OpenXR standards into your metadata through namespaces."}),"\n",(0,s.jsx)(e.h2,{id:"overview-and-use-cases",children:"Overview and Use Cases"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://www.khronos.org/openxr/",children:"OpenXR"})," is an open, royalty-free standard for accessing virtual reality (VR) and augmented reality (AR) platforms and devices. It provides a common foundation for VR and AR applications to run across various hardware platforms."]}),"\n",(0,s.jsx)(e.p,{children:"Common use cases include:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"XR application compatibility metadata"}),"\n",(0,s.jsx)(e.li,{children:"Hardware requirements specification"}),"\n",(0,s.jsx)(e.li,{children:"Device capability descriptions"}),"\n",(0,s.jsx)(e.li,{children:"Input binding configurations"}),"\n",(0,s.jsx)(e.li,{children:"XR content accessibility information"}),"\n",(0,s.jsx)(e.li,{children:"Immersive experience parameters"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"core-properties-and-extensions",children:"Core Properties and Extensions"}),"\n",(0,s.jsx)(e.p,{children:"OpenXR provides a standardized way to interact with XR hardware:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Core Components"}),": Runtime, Application, Session, Action, Space"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Key Concepts"}),":","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Instance: The entry point to the OpenXR runtime"}),"\n",(0,s.jsx)(e.li,{children:"Session: The connection between an application and a user's physical environment"}),"\n",(0,s.jsx)(e.li,{children:"Action: An input or output operation that an application exposes"}),"\n",(0,s.jsx)(e.li,{children:"Space: A frame of reference for tracking"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Common Extensions"}),":","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Hand tracking"}),"\n",(0,s.jsx)(e.li,{children:"Eye tracking"}),"\n",(0,s.jsx)(e.li,{children:"Spatial anchors"}),"\n",(0,s.jsx)(e.li,{children:"Composition layers"}),"\n",(0,s.jsx)(e.li,{children:"Scene understanding"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"namespace-declaration",children:"Namespace Declaration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "openxr": "https://www.khronos.org/openxr/schema/"\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"external-reference-patterns",children:"External Reference Patterns"}),"\n",(0,s.jsx)(e.p,{children:"When linking to OpenXR-compatible content:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "XR Viewer Application",\n  "applicationCategory": "VirtualRealityApplication",\n  "operatingSystem": "Windows, Android",\n  "softwareRequirements": "OpenXR 1.0 compatible system"\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"For more detailed hardware requirements:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "Immersive Training Simulator",\n  "applicationCategory": "VirtualRealityApplication",\n  "operatingSystem": "Windows",\n  "softwareRequirements": {\n    "@type": "CreativeWork",\n    "name": "OpenXR Requirements",\n    "contentUrl": "https://example.com/app/xr-requirements.json",\n    "encodingFormat": "application/json" \n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"embedding-patterns",children:"Embedding Patterns"}),"\n",(0,s.jsx)(e.p,{children:"When embedding OpenXR configuration data:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "openxr": "https://www.khronos.org/openxr/schema/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "XR Experience",\n  "applicationCategory": "VirtualRealityApplication",\n  "openxr:requirements": {\n    "minVersion": "1.0",\n    "extensions": [\n      "XR_EXT_hand_tracking",\n      "XR_FB_display_refresh_rate"\n    ],\n    "formFactors": ["hmd", "handheld"]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,s.jsx)(e.p,{children:"Complete XR experience with detailed configuration:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "openxr": "https://www.khronos.org/openxr/schema/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "Immersive Educational Experience",\n  "description": "Interactive exploration of historical sites in virtual reality",\n  "applicationCategory": "EducationalApplication VirtualRealityApplication",\n  "operatingSystem": "Windows, Android",\n  "offers": {\n    "@type": "Offer",\n    "price": "15.99",\n    "priceCurrency": "USD"\n  },\n  "openxr:configuration": {\n    "specVersion": "1.0",\n    "requiredExtensions": [\n      "XR_EXT_hand_tracking",\n      "XR_FB_display_refresh_rate"\n    ],\n    "optionalExtensions": [\n      "XR_EXT_eye_gaze_interaction",\n      "XR_MSFT_spatial_anchor"\n    ],\n    "supportedFormFactors": [\n      {\n        "type": "hmd",\n        "recommendedDevices": ["Oculus Quest 2", "HTC Vive Pro", "Valve Index"]\n      },\n      {\n        "type": "handheld",\n        "recommendedDevices": ["Android AR compatible phones"]\n      }\n    ],\n    "inputActions": [\n      {\n        "name": "grab",\n        "type": "boolean",\n        "defaultBindings": {\n          "hmd": "squeeze/value",\n          "handheld": "touchscreen/tap" \n        }\n      },\n      {\n        "name": "navigate",\n        "type": "vector2",\n        "defaultBindings": {\n          "hmd": "thumbstick",\n          "handheld": "touchscreen/swipe"\n        }\n      },\n      {\n        "name": "select",\n        "type": "boolean",\n        "defaultBindings": {\n          "hmd": "trigger/value",\n          "handheld": "touchscreen/tap"\n        }\n      }\n    ],\n    "graphicsRequirements": {\n      "recommendedGPU": "NVIDIA GTX 1070 or equivalent",\n      "minimumGPU": "NVIDIA GTX 970 or equivalent",\n      "preferredColorSpace": "linear"\n    },\n    "userExperience": {\n      "comfortLevel": "moderate",\n      "locomotionMethods": ["teleport", "continuous"],\n      "standingExperience": true,\n      "seatedExperience": true,\n      "playAreaRecommended": "2m x 2m"\n    }\n  },\n  "openxr:accessibility": {\n    "subtitles": true,\n    "audioDescription": true,\n    "oneHandedMode": true,\n    "noFlashingContent": true,\n    "colorBlindOptions": true,\n    "comfortSettings": {\n      "adjustableFieldOfView": true,\n      "motionIntensity": "adjustable",\n      "snapTurning": true\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"Another example focused on AR application:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "openxr": "https://www.khronos.org/openxr/schema/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "AR Object Visualizer",\n  "description": "View 3D models in your real environment with augmented reality",\n  "applicationCategory": "AugmentedRealityApplication",\n  "operatingSystem": "iOS, Android",\n  "openxr:configuration": {\n    "specVersion": "1.0",\n    "requiredExtensions": [\n      "XR_MSFT_scene_understanding",\n      "XR_FB_plane_detection"\n    ],\n    "supportedFormFactors": [\n      {\n        "type": "handheld",\n        "recommendedDevices": ["ARKit compatible iOS devices", "ARCore compatible Android devices"]\n      },\n      {\n        "type": "hmd",\n        "recommendedDevices": ["Microsoft HoloLens 2"]\n      }\n    ],\n    "trackingCapabilities": {\n      "planarSurfaces": true,\n      "environmentUnderstanding": true,\n      "lightEstimation": true,\n      "objectOcclusion": true,\n      "imageRecognition": true\n    },\n    "contentPlacement": {\n      "anchorTypes": ["plane", "mesh", "image"],\n      "persistentAnchors": true,\n      "cloudAnchors": true,\n      "multiUserExperience": true\n    }\n  },\n  "openxr:compatibility": {\n    "arCore": {\n      "minVersion": "1.25.0",\n      "features": ["Depth API", "Cloud Anchors"]\n    },\n    "arKit": {\n      "minVersion": "4.0",\n      "features": ["People Occlusion", "Scene Reconstruction"]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Include both required and optional OpenXR extensions"}),"\n",(0,s.jsx)(e.li,{children:"Specify input mappings for different form factors"}),"\n",(0,s.jsx)(e.li,{children:"Document hardware requirements clearly"}),"\n",(0,s.jsx)(e.li,{children:"Include accessibility information"}),"\n",(0,s.jsx)(e.li,{children:"Provide fallbacks for devices without specific extensions"}),"\n",(0,s.jsx)(e.li,{children:"Document comfort settings for immersive experiences"}),"\n",(0,s.jsx)(e.li,{children:"Specify minimum OpenXR runtime version"}),"\n",(0,s.jsx)(e.li,{children:"Include details about tracking requirements"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Hardware Diversity"}),": Account for different XR hardware capabilities"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Input Flexibility"}),": Design for multiple input methods"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Performance Specifications"}),": Be clear about performance requirements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Accessibility"}),": Include accessibility features and options"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Extension Support"}),": Have fallbacks for optional extensions"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Form Factor Specifics"}),": Optimize for different device types"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Platform Specifics"}),": Note any platform-specific considerations"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"related-concepts",children:"Related Concepts"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"../concepts/metadata-fundamentals.md",children:"Metadata Fundamentals"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"../concepts/types-of-assets.md",children:"Types of Assets"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/concepts/linking-vs-embedding",children:"Linking vs Embedding"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"practical-implementation-guide",children:"Practical Implementation Guide"}),"\n",(0,s.jsx)(e.h3,{id:"step-1-basic-xr-application-setup",children:"Step 1: Basic XR Application Setup"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Define Basic Application Information"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "openxr": "https://www.khronos.org/openxr/schema/"\n  },\n  "@type": "SoftwareApplication",\n  "name": "My XR App",\n  "applicationCategory": "VirtualRealityApplication",\n  "operatingSystem": "Windows, Android",\n  "description": "An immersive XR experience"\n}\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Add OpenXR Version and Extensions"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... basic properties ...\n  "openxr:requirements": {\n    "specVersion": "1.0",\n    "requiredExtensions": [\n      "XR_KHR_composition_layer_cube",\n      "XR_EXT_hand_tracking"\n    ],\n    "optionalExtensions": [\n      "XR_EXT_eye_gaze_interaction",\n      "XR_FB_display_refresh_rate"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"step-2-hardware-and-platform-configuration",children:"Step 2: Hardware and Platform Configuration"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Specify Device Requirements"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:hardware": {\n    "minimumRequirements": {\n      "gpu": "NVIDIA GTX 970 or equivalent",\n      "cpu": "Intel i5-4590 or equivalent",\n      "ram": "8 GB",\n      "storage": "2 GB"\n    },\n    "recommendedRequirements": {\n      "gpu": "NVIDIA RTX 2060 or equivalent",\n      "cpu": "Intel i7-9700K or equivalent",\n      "ram": "16 GB",\n      "storage": "4 GB"\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Define Form Factor Support"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:formFactors": {\n    "hmd": {\n      "supported": true,\n      "recommendedDevices": [\n        "Meta Quest 2",\n        "Valve Index",\n        "HP Reverb G2"\n      ],\n      "minimumFieldOfView": {\n        "horizontal": 90,\n        "vertical": 90\n      }\n    },\n    "handheld": {\n      "supported": true,\n      "recommendedDevices": [\n        "ARCore compatible phones",\n        "ARKit compatible phones"\n      ]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"step-3-input-and-interaction-configuration",children:"Step 3: Input and Interaction Configuration"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Define Input Actions"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:input": {\n    "actions": [\n      {\n        "name": "hand_pose",\n        "type": "pose",\n        "requirements": ["XR_EXT_hand_tracking"],\n        "bindings": {\n          "hmd": "/user/hand/left/input/aim/pose",\n          "handheld": "/user/hand/grip/pose"\n        }\n      },\n      {\n        "name": "select_object",\n        "type": "boolean",\n        "bindings": {\n          "hmd": "/user/hand/right/input/trigger/value",\n          "handheld": "/user/hand/grip/value"\n        }\n      }\n    ],\n    "actionSets": [\n      {\n        "name": "gameplay",\n        "priority": 1,\n        "actions": ["hand_pose", "select_object"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"step-4-user-experience-and-comfort-settings",children:"Step 4: User Experience and Comfort Settings"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Configure Comfort Options"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:comfort": {\n    "locomotion": {\n      "methods": ["teleport", "smooth"],\n      "defaultMethod": "teleport",\n      "turnOptions": {\n        "snap": true,\n        "smooth": true,\n        "defaultAngle": 45\n      },\n      "vignette": {\n        "enabled": true,\n        "intensity": 0.7\n      }\n    },\n    "posture": {\n      "standing": true,\n      "seated": true,\n      "roomScale": true,\n      "minPlayArea": {\n        "width": 1.5,\n        "depth": 1.5\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Add Accessibility Features"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:accessibility": {\n    "visual": {\n      "subtitles": true,\n      "highContrast": true,\n      "colorblindModes": ["protanopia", "deuteranopia", "tritanopia"],\n      "textScaling": true\n    },\n    "audio": {\n      "spatialAudio": true,\n      "audioDescription": true,\n      "hearingAidSupport": true\n    },\n    "physical": {\n      "oneHandedMode": true,\n      "seatedMode": true,\n      "reducedMotion": true\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"step-5-platform-specific-implementation",children:"Step 5: Platform-Specific Implementation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"AR Implementation"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:ar": {\n    "features": {\n      "planeDetection": true,\n      "imageTracking": true,\n      "meshGeneration": true,\n      "lightEstimation": true\n    },\n    "anchors": {\n      "local": true,\n      "cloud": true,\n      "persistence": true\n    },\n    "occlusion": {\n      "environmental": true,\n      "people": true\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.ol,{start:"2",children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"VR Implementation"}),":"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  // ... previous properties ...\n  "openxr:vr": {\n    "rendering": {\n      "resolution": {\n        "default": "native",\n        "scalingOptions": [0.7, 1.0, 1.2, 1.5]\n      },\n      "refreshRate": {\n        "minimum": 72,\n        "recommended": 90,\n        "maximum": 120\n      }\n    },\n    "tracking": {\n      "headset": "6dof",\n      "controllers": "6dof",\n      "hands": "skeletal",\n      "eyes": "gaze"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"best-practices-for-implementation",children:"Best Practices for Implementation"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Version Management"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Always specify OpenXR version requirements"}),"\n",(0,s.jsx)(e.li,{children:"List required and optional extensions separately"}),"\n",(0,s.jsx)(e.li,{children:"Include fallbacks for unsupported features"}),"\n",(0,s.jsx)(e.li,{children:"Document version-specific features"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Hardware Compatibility"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Define clear minimum requirements"}),"\n",(0,s.jsx)(e.li,{children:"List recommended specifications"}),"\n",(0,s.jsx)(e.li,{children:"Support multiple form factors when possible"}),"\n",(0,s.jsx)(e.li,{children:"Include device-specific optimizations"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Input Handling"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Design for multiple input methods"}),"\n",(0,s.jsx)(e.li,{children:"Support both VR and AR interactions"}),"\n",(0,s.jsx)(e.li,{children:"Implement fallbacks for unsupported inputs"}),"\n",(0,s.jsx)(e.li,{children:"Use standard action mappings"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Performance Optimization"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Implement dynamic resolution scaling"}),"\n",(0,s.jsx)(e.li,{children:"Support multiple quality presets"}),"\n",(0,s.jsx)(e.li,{children:"Monitor and adjust refresh rates"}),"\n",(0,s.jsx)(e.li,{children:"Optimize for mobile VR/AR"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Extension Support"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Check extension availability at runtime"}),"\n",(0,s.jsx)(e.li,{children:"Provide fallback functionality"}),"\n",(0,s.jsx)(e.li,{children:"Log unsupported features"}),"\n",(0,s.jsx)(e.li,{children:"Handle graceful degradation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Input Problems"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Validate action bindings"}),"\n",(0,s.jsx)(e.li,{children:"Test across different devices"}),"\n",(0,s.jsx)(e.li,{children:"Support multiple input methods"}),"\n",(0,s.jsx)(e.li,{children:"Handle disconnection events"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Performance Issues"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Monitor frame timing"}),"\n",(0,s.jsx)(e.li,{children:"Implement dynamic quality scaling"}),"\n",(0,s.jsx)(e.li,{children:"Check GPU/CPU utilization"}),"\n",(0,s.jsx)(e.li,{children:"Optimize render pipeline"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Platform Compatibility"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Test on target platforms"}),"\n",(0,s.jsx)(e.li,{children:"Verify extension support"}),"\n",(0,s.jsx)(e.li,{children:"Check hardware capabilities"}),"\n",(0,s.jsx)(e.li,{children:"Validate tracking requirements"}),"\n"]}),"\n"]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function o(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);