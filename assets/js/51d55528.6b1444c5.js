"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[8492],{7648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"concepts/metadata-fundamentals","title":"Metadata Fundamentals","description":"Metadata is structured information that describes, explains, or locates virtual assets and experiences in the Metaverse. Well-structured metadata enables interoperability, discoverability, and management of digital assets across different platforms and environments.","source":"@site/docs/concepts/metadata-fundamentals.md","sourceDirName":"concepts","slug":"/concepts/metadata-fundamentals","permalink":"/concepts/metadata-fundamentals","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/concepts/metadata-fundamentals.md","tags":[],"version":"current","frontMatter":{}}');var i=t(4848),s=t(8453);const r={},l="Metadata Fundamentals",o={},c=[{value:"Required Elements",id:"required-elements",level:2},{value:"1. Context (@context)",id:"1-context-context",level:3},{value:"2. Type (@type)",id:"2-type-type",level:3},{value:"Property Value Handling",id:"property-value-handling",level:2},{value:"Simple Values",id:"simple-values",level:3},{value:"Additional Properties",id:"additional-properties",level:3},{value:"Complex Values",id:"complex-values",level:3},{value:"Relationship Properties",id:"relationship-properties",level:2},{value:"hasPart",id:"haspart",level:3},{value:"associatedMedia",id:"associatedmedia",level:3},{value:"encodesCreativeWork",id:"encodescreativework",level:3},{value:"mainEntity",id:"mainentity",level:3},{value:"Location Types",id:"location-types",level:2},{value:"Virtual-Only Locations",id:"virtual-only-locations",level:3},{value:"Digital Twins",id:"digital-twins",level:3},{value:"Complete Example",id:"complete-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Patterns",id:"common-patterns",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"metadata-fundamentals",children:"Metadata Fundamentals"})}),"\n",(0,i.jsx)(n.p,{children:"Metadata is structured information that describes, explains, or locates virtual assets and experiences in the Metaverse. Well-structured metadata enables interoperability, discoverability, and management of digital assets across different platforms and environments."}),"\n",(0,i.jsx)(n.h2,{id:"required-elements",children:"Required Elements"}),"\n",(0,i.jsx)(n.p,{children:"Every metadata object MUST include two fundamental elements:"}),"\n",(0,i.jsx)(n.h3,{id:"1-context-context",children:"1. Context (@context)"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@context"})," must be provided as an object that defines the vocabulary and rules for interpreting metadata:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "gltf": "https://www.khronos.org/gltf/",\n    "usd": "https://openusd.org/ns/"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-type-type",children:"2. Type (@type)"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@type"})," must be a valid Schema.org type. For maximum compatibility and functionality, consider using these base types:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CreativeWork"}),": Most versatile base type","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Supports rich relationships (",(0,i.jsx)(n.code,{children:"hasPart"}),", ",(0,i.jsx)(n.code,{children:"associatedMedia"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Ideal for complex virtual assets"}),"\n",(0,i.jsxs)(n.li,{children:["Can be specialized using ",(0,i.jsx)(n.code,{children:"additionalType"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MediaObject"})," and subtypes:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"3DModel: Three-dimensional representations"}),"\n",(0,i.jsx)(n.li,{children:"AudioObject: Sound files"}),"\n",(0,i.jsx)(n.li,{children:"ImageObject: Image files"}),"\n",(0,i.jsx)(n.li,{children:"VideoObject: Video content"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Place"}),": Physical location representations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SoftwareApplication"}),": Interactive applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DigitalDocument"}),": Documentation and text"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LearningResource"}),": Educational content"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"property-value-handling",children:"Property Value Handling"}),"\n",(0,i.jsx)(n.h3,{id:"simple-values",children:"Simple Values"}),"\n",(0,i.jsx)(n.p,{children:"For basic properties, use direct values:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "CreativeWork",\n  "name": "Simple Asset",\n  "description": "Basic asset example"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"additional-properties",children:"Additional Properties"}),"\n",(0,i.jsx)(n.p,{children:"When adding custom properties, use PropertyValue structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Complex Asset",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "capacity",\n      "name": "Maximum Capacity",\n      "value": 100\n    },\n    {\n      "@type": "PropertyValue",\n      "propertyID": "renderQuality",\n      "name": "Render Quality",\n      "value": "high"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"complex-values",children:"Complex Values"}),"\n",(0,i.jsx)(n.p,{children:"For complex data structures, use namespaced properties:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "usd": "https://openusd.org/ns/"\n  },\n  "@type": "CreativeWork",\n  "name": "Asset with Complex Properties",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "quality",\n      "name": "Quality Settings",\n      "value": "high-performance"\n    }\n  ],\n  "usd:renderSettings": {\n    "quality": "high",\n    "shadows": "enabled",\n    "reflections": "realtime"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"relationship-properties",children:"Relationship Properties"}),"\n",(0,i.jsx)(n.p,{children:"Schema.org provides several ways to define relationships between content:"}),"\n",(0,i.jsx)(n.h3,{id:"haspart",children:"hasPart"}),"\n",(0,i.jsx)(n.p,{children:"Used to indicate components or pieces that make up the whole. Example showing multiple components using consistent namespacing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Complex Asset",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Main Component",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://example.com/main.glb",\n      "gltf:transform": {\n        "scale": [1.0, 1.0, 1.0],\n        "rotation": [0, 0, 0, 1],\n        "translation": [0, 1, 0]\n      }\n    },\n    {\n      "@type": "3DModel",\n      "name": "Secondary Component",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://example.com/secondary.glb",\n      "gltf:transform": {\n        "scale": [1.0, 1.0, 1.0],\n        "rotation": [0, 0.707, 0, 0.707],\n        "translation": [1, 0, 0]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"associatedmedia",children:"associatedMedia"}),"\n",(0,i.jsx)(n.p,{children:"Used to reference related media content:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Asset with Media",\n  "associatedMedia": [\n    {\n      "@type": "VideoObject",\n      "name": "Asset Preview",\n      "encodingFormat": "video/mp4",\n      "contentUrl": "https://example.com/preview.mp4"\n    },\n    {\n      "@type": "ImageObject",\n      "name": "Asset Thumbnail",\n      "encodingFormat": "image/png",\n      "contentUrl": "https://example.com/thumbnail.png"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"encodescreativework",children:"encodesCreativeWork"}),"\n",(0,i.jsx)(n.p,{children:"Used to reference creative works encoded in this object:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Asset Container",\n  "encodesCreativeWork": [\n    {\n      "@type": "ImageObject",\n      "name": "Concept Art",\n      "encodingFormat": "image/png",\n      "contentUrl": "https://example.com/concept.png"\n    },\n    {\n      "@type": "TextObject",\n      "name": "Background Story",\n      "encodingFormat": "text/markdown",\n      "contentUrl": "https://example.com/story.md"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mainentity",children:"mainEntity"}),"\n",(0,i.jsx)(n.p,{children:"Used to indicate the primary entity described by the creative work:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "name": "Character Profile",\n  "mainEntity": {\n    "@type": "Person",\n    "name": "Character Name",\n    "description": "Character background and story",\n    "additionalProperty": [\n      {\n        "@type": "PropertyValue",\n        "propertyID": "class",\n        "name": "Character Class",\n        "value": "Warrior"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"location-types",children:"Location Types"}),"\n",(0,i.jsx)(n.h3,{id:"virtual-only-locations",children:"Virtual-Only Locations"}),"\n",(0,i.jsx)(n.p,{children:"For purely virtual spaces, use CreativeWork with additionalType:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "usd": "https://openusd.org/ns/"\n  },\n  "@type": "CreativeWork",\n  "name": "Fantasy Arena",\n  "additionalType": "VirtualLocation",\n  "description": "Floating combat arena",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "capacity",\n      "name": "Maximum Attendee Capacity",\n      "value": 100\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"digital-twins",children:"Digital Twins"}),"\n",(0,i.jsx)(n.p,{children:"For digital representations of real places, use Place:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "Place",\n  "name": "Digital Museum",\n  "description": "Digital twin of physical museum",\n  "maximumAttendeeCapacity": 500,\n  "geo": {\n    "@type": "GeoCoordinates",\n    "latitude": 51.5009,\n    "longitude": -0.1774\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,i.jsx)(n.p,{children:"This comprehensive example shows all major metadata concepts working together:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "gltf": "https://www.khronos.org/gltf/",\n    "usd": "https://openusd.org/ns/"\n  },\n  "@type": "ImageObject",\n  "name": "Virtual Gallery Experience",\n  "description": "Interactive virtual art gallery with multiple components",\n  "encodingFormat": "image/png",\n  "contentSize": "3.216 MB",\n  "width": 4000,\n  "height": 4000,\n  "url": "https://path/to/image_thumbnail.png",\n  "additionalType": "VirtualLocation",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "capacity",\n      "name": "Maximum Attendee Capacity",\n      "value": 100\n    },\n    {\n      "@type": "PropertyValue",\n      "propertyID": "lighting",\n      "name": "Lighting System",\n      "value": "dynamic"\n    },\n    {\n      "@type": "PropertyValue",\n      "propertyID": "physics",\n      "name": "Physics System",\n      "value": "custom"\n    },\n    {\n      "@type": "PropertyValue",\n      "propertyID": "interactivity",\n      "name": "Interactivity Level",\n      "value": "full"\n    }\n  ],\n  "usd:environment": {\n    "lighting": {\n      "type": "dynamic",\n      "shadows": true,\n      "quality": "high"\n    },\n    "physics": {\n      "type": "custom",\n      "gravity": -9.81,\n      "collisions": true\n    },\n    "interactivity": {\n      "mode": "full",\n      "gestures": ["grab", "point", "wave"]\n    }\n  },\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Main Gallery Hall",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://example.com/hall.glb",\n      "gltf:transform": {\n        "scale": [2.0, 1.0, 2.0],\n        "rotation": [0, 0, 0, 1],\n        "translation": [0, 0, 0]\n      }\n    },\n    {\n      "@type": "3DModel",\n      "name": "Exhibition Wing A",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://example.com/wing_a.glb",\n      "gltf:transform": {\n        "scale": [1.0, 1.0, 1.0],\n        "rotation": [0, 0.707, 0, 0.707],\n        "translation": [20, 0, 0]\n      }\n    },\n    {\n      "@type": "3DModel",\n      "name": "Exhibition Wing B",\n      "encodingFormat": "model/gltf-binary",\n      "contentUrl": "https://example.com/wing_b.glb",\n      "gltf:transform": {\n        "scale": [1.0, 1.0, 1.0],\n        "rotation": [0, -0.707, 0, 0.707],\n        "translation": [-20, 0, 0]\n      }\n    }\n  ],\n  "associatedMedia": [\n    {\n      "@type": "VideoObject",\n      "name": "Gallery Walkthrough",\n      "encodingFormat": "video/mp4",\n      "contentUrl": "https://example.com/walkthrough.mp4"\n    }\n  ],\n  "encodesCreativeWork": [\n    {\n      "@type": "ImageObject",\n      "name": "Gallery Floor Plan",\n      "encodingFormat": "image/png",\n      "contentUrl": "https://example.com/floorplan.png"\n    },\n    {\n      "@type": "TextObject",\n      "name": "Visitor Guide",\n      "encodingFormat": "text/markdown",\n      "contentUrl": "https://example.com/guide.md"\n    }\n  ],\n  "mainEntity": {\n    "@type": "Place",\n    "name": "Virtual Modern Art Gallery",\n    "description": "A contemporary art space in the metaverse",\n    "additionalProperty": [\n      {\n        "@type": "PropertyValue",\n        "propertyID": "curator",\n        "name": "Gallery Curator",\n        "value": "Virtual Arts Foundation"\n      },\n      {\n        "@type": "PropertyValue",\n        "propertyID": "exhibitions",\n        "name": "Current Exhibitions",\n        "value": ["Digital Realism", "NFT Showcase", "Interactive Installations"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Type Selection"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Choose type based on needed properties"}),"\n",(0,i.jsx)(n.li,{children:"Consider Schema.org compatibility"}),"\n",(0,i.jsx)(n.li,{children:"Use additionalType for specialization"}),"\n",(0,i.jsx)(n.li,{children:"Verify property support for chosen type"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Property Organization"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Group related properties"}),"\n",(0,i.jsx)(n.li,{children:"Use clear property names"}),"\n",(0,i.jsx)(n.li,{children:"Maintain consistent structure"}),"\n",(0,i.jsx)(n.li,{children:"Document relationships clearly"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Value Handling"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use appropriate value structure"}),"\n",(0,i.jsx)(n.li,{children:"Namespace complex objects"}),"\n",(0,i.jsx)(n.li,{children:"Maintain data type consistency"}),"\n",(0,i.jsx)(n.li,{children:"Follow Schema.org value types"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Relationship Definition"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use appropriate relationship properties"}),"\n",(0,i.jsx)(n.li,{children:"Maintain clear hierarchies"}),"\n",(0,i.jsx)(n.li,{children:"Document dependencies"}),"\n",(0,i.jsx)(n.li,{children:"Consider relationship direction"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Namespace Usage"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Define all namespaces in @context"}),"\n",(0,i.jsx)(n.li,{children:"Use appropriate namespace prefixes"}),"\n",(0,i.jsx)(n.li,{children:"Keep namespace usage consistent"}),"\n",(0,i.jsx)(n.li,{children:"Document namespace purposes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Metadata Validation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Validate against Schema.org"}),"\n",(0,i.jsx)(n.li,{children:"Check namespace compliance"}),"\n",(0,i.jsx)(n.li,{children:"Verify property values"}),"\n",(0,i.jsx)(n.li,{children:"Test relationship integrity"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Base Type Selection"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type": "CreativeWork",\n  "additionalType": "VirtualLocation"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Property Value Structure"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"additionalProperty": [\n  {\n    "@type": "PropertyValue",\n    "propertyID": "customField",\n    "name": "Custom Field Name",\n    "value": "custom value"\n  }\n]\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Namespaced Properties"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"gltf:transform": {\n  "scale": [1.0, 1.0, 1.0]\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Relationships"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"hasPart": [\n  {\n    "@type": "3DModel",\n    "name": "Component"\n  }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These patterns ensure maximum compatibility while enabling rich descriptions of virtual assets and experiences. When implementing metadata, always consider Schema.org compatibility, proper value handling, and clear relationship definition."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var a=t(6540);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);