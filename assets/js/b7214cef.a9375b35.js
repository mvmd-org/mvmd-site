"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[111],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},9742:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"backup/implementation/metadata-profiles","title":"Metadata Profiles","description":"Metadata profiles provide standardized templates for common asset types, ensuring consistency and interoperability across platforms and applications.","source":"@site/docs/backup/implementation/metadata-profiles.md","sourceDirName":"backup/implementation","slug":"/backup/implementation/metadata-profiles","permalink":"/backup/implementation/metadata-profiles","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/backup/implementation/metadata-profiles.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7}}');var r=t(4848),o=t(8453);const a={sidebar_position:7},s="Metadata Profiles",l={},d=[{value:"Using Metadata Profiles",id:"using-metadata-profiles",level:2},{value:"Core Profile Examples",id:"core-profile-examples",level:2},{value:"Basic 3D Model Profile",id:"basic-3d-model-profile",level:3},{value:"Avatar Profile",id:"avatar-profile",level:3},{value:"Environment Profile",id:"environment-profile",level:3},{value:"Extended Profiles",id:"extended-profiles",level:2},{value:"Game Asset Profile",id:"game-asset-profile",level:3},{value:"Virtual Fashion Profile",id:"virtual-fashion-profile",level:3},{value:"Profile Implementation Guidelines",id:"profile-implementation-guidelines",level:2},{value:"Customizing Profiles",id:"customizing-profiles",level:3},{value:"Profile Compatibility",id:"profile-compatibility",level:3},{value:"Related Resources",id:"related-resources",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"metadata-profiles",children:"Metadata Profiles"})}),"\n",(0,r.jsx)(n.p,{children:"Metadata profiles provide standardized templates for common asset types, ensuring consistency and interoperability across platforms and applications."}),"\n",(0,r.jsx)(n.h2,{id:"using-metadata-profiles",children:"Using Metadata Profiles"}),"\n",(0,r.jsx)(n.p,{children:"Metadata profiles are pre-defined schema templates that:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Include required properties for specific asset types"}),"\n",(0,r.jsx)(n.li,{children:"Provide consistent naming and structure"}),"\n",(0,r.jsx)(n.li,{children:"Ensure compatibility with MVMD standards"}),"\n",(0,r.jsx)(n.li,{children:"Simplify implementation across platforms"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"core-profile-examples",children:"Core Profile Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-3d-model-profile",children:"Basic 3D Model Profile"}),"\n",(0,r.jsx)(n.p,{children:"A foundational profile for 3D models with essential properties:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Example Model",\n  "description": "Detailed description of the model",\n  "creator": {\n    "@type": "Person",\n    "name": "Creator Name"\n  },\n  "contentUrl": "https://example.com/model.glb",\n  "encodingFormat": "model/gltf-binary",\n  "thumbnail": "https://example.com/thumbnail.jpg",\n  "license": "https://creativecommons.org/licenses/by/4.0/",\n  "dateCreated": "2024-01-15"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"avatar-profile",children:"Avatar Profile"}),"\n",(0,r.jsx)(n.p,{children:"A profile for avatar assets with customization options:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Customizable Avatar",\n  "description": "Humanoid avatar with customization options",\n  "creator": {\n    "@type": "Organization",\n    "name": "Avatar Studios"\n  },\n  "contentUrl": "https://example.com/avatar.glb",\n  "encodingFormat": "model/gltf-binary",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "avatarProperties",\n      "name": "Avatar Properties",\n      "value": {\n        "skeletonType": "humanoid",\n        "height": 1.8,\n        "customizableFeatures": ["hair", "face", "body", "clothing"],\n        "animationSets": ["idle", "walk", "run", "jump"],\n        "lod": {\n          "levels": 3,\n          "polycount": [20000, 10000, 5000]\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"environment-profile",children:"Environment Profile"}),"\n",(0,r.jsx)(n.p,{children:"A profile for virtual environments and spaces:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "CreativeWork",\n  "name": "Forest Environment",\n  "description": "Interactive forest environment with dynamic lighting",\n  "creator": {\n    "@type": "Organization",\n    "name": "Virtual Environments Inc."\n  },\n  "contentUrl": "https://example.com/forest.zip",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Terrain",\n      "contentUrl": "https://example.com/forest/terrain.glb"\n    },\n    {\n      "@type": "3DModel", \n      "name": "Vegetation",\n      "contentUrl": "https://example.com/forest/vegetation.glb"\n    }\n  ],\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "environmentProperties",\n      "name": "Environment Properties",\n      "value": {\n        "scale": [100, 25, 100],\n        "recommendedCapacity": 20,\n        "lighting": "dynamic",\n        "timeOfDay": "variable",\n        "weatherEffects": ["rain", "fog", "sunshine"],\n        "ambientAudio": "https://example.com/forest/ambient.mp3"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"extended-profiles",children:"Extended Profiles"}),"\n",(0,r.jsx)(n.h3,{id:"game-asset-profile",children:"Game Asset Profile"}),"\n",(0,r.jsx)(n.p,{children:"A profile for game-ready assets with gameplay properties:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "3DModel",\n  "name": "Treasure Chest",\n  "description": "Interactive treasure chest that can be opened",\n  "contentUrl": "https://example.com/chest.glb",\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "gameProperties",\n      "name": "Game Properties",\n      "value": {\n        "interactable": true,\n        "interactions": ["open", "close", "destroy"],\n        "hitPoints": 50,\n        "collisionMesh": "chest_collision.obj",\n        "lootTable": {\n          "common": ["gold", "silver"],\n          "rare": ["gem", "artifact"],\n          "legendary": ["unique_item"]\n        },\n        "animations": {\n          "idle": "chest_idle.anim",\n          "open": "chest_open.anim",\n          "destroy": "chest_destroy.anim"\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"virtual-fashion-profile",children:"Virtual Fashion Profile"}),"\n",(0,r.jsx)(n.p,{children:"A profile for wearable fashion items:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/"\n  },\n  "@type": "Product",\n  "name": "Digital Fashion Jacket",\n  "description": "Virtual leather jacket with customizable patches",\n  "contentUrl": "https://example.com/jacket.glb",\n  "offers": {\n    "@type": "Offer",\n    "price": 25.00,\n    "priceCurrency": "USD"\n  },\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "wearableProperties",\n      "name": "Wearable Properties",\n      "value": {\n        "category": "outerwear",\n        "fitType": "regular",\n        "compatibleAvatars": ["humanoid", "custom-rig-1"],\n        "supportedPlatforms": ["platform-a", "platform-b", "platform-c"],\n        "customization": {\n          "colors": ["#000000", "#A52A2A", "#0000FF"],\n          "patches": [\n            {\n              "name": "Skull",\n              "position": "back"\n            },\n            {\n              "name": "Star",\n              "position": "sleeve"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"profile-implementation-guidelines",children:"Profile Implementation Guidelines"}),"\n",(0,r.jsx)(n.h3,{id:"customizing-profiles",children:"Customizing Profiles"}),"\n",(0,r.jsx)(n.p,{children:"When adapting profiles for your own use:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start with the most relevant profile"})," for your asset type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Keep all required properties"})," to maintain compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add custom properties"})," using ",(0,r.jsx)(n.code,{children:"additionalProperty"})," for specialized features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Document any extensions"})," for users of your assets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validate the final metadata"})," against MVMD schemas"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"profile-compatibility",children:"Profile Compatibility"}),"\n",(0,r.jsx)(n.p,{children:"To ensure your customized profiles remain compatible:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maintain the core structure"})," defined in the profile"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use proper data types"})," for all values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Follow naming conventions"})," for custom properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Include version information"})," for your custom extensions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test across platforms"})," that support the base profile"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../concepts/types-of-assets.md",children:"Types of Assets"}),": Understanding different asset categories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/backup/integration-profiles/overview",children:"Integration Profiles"}),": Platform-specific integration guides"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../reference/validator.md",children:"Validation Tools"}),": Tools for validating profile compliance"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);