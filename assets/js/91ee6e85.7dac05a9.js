"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[8101],{122:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"reference/schemas","title":"Schema Definitions","description":"This page provides technical schema definitions for MVMD metadata structures, serving as a reference for developers implementing MVMD-compliant systems.","source":"@site/docs/reference/schemas.md","sourceDirName":"reference","slug":"/reference/schemas","permalink":"/reference/schemas","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/reference/schemas.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Wearable","permalink":"/integration-profiles/wearable"},"next":{"title":"Glossary","permalink":"/reference/glossary"}}');var t=i(4848),s=i(8453);const a={sidebar_position:2},d="Schema Definitions",c={},o=[{value:"JSON Schema Definitions",id:"json-schema-definitions",level:2},{value:"Core Schema.org Types",id:"core-schemaorg-types",level:2},{value:"Validation Requirements",id:"validation-requirements",level:2},{value:"Basic Profile Validation",id:"basic-profile-validation",level:3},{value:"Advanced Validation",id:"advanced-validation",level:3},{value:"Custom Property Validation",id:"custom-property-validation",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"Using the Schemas",id:"using-the-schemas",level:2},{value:"Related Resources",id:"related-resources",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"schema-definitions",children:"Schema Definitions"})}),"\n",(0,t.jsx)(n.p,{children:"This page provides technical schema definitions for MVMD metadata structures, serving as a reference for developers implementing MVMD-compliant systems."}),"\n",(0,t.jsx)(n.h2,{id:"json-schema-definitions",children:"JSON Schema Definitions"}),"\n",(0,t.jsx)(n.p,{children:"MVMD provides JSON Schema definitions that can be used to validate metadata against our specifications:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "$id": "https://mvmd.org/schemas/v1/core",\n  "title": "MVMD Core Schema",\n  "description": "Schema for validating MVMD core metadata",\n  "type": "object",\n  "required": ["@context", "@type"],\n  "properties": {\n    "@context": {\n      "type": ["object", "string", "array"],\n      "description": "The JSON-LD context defining the vocabulary"\n    },\n    "@type": {\n      "type": ["string", "array"],\n      "description": "The primary type of the described resource"\n    },\n    "name": {\n      "type": "string",\n      "description": "The name of the asset",\n      "maxLength": 100\n    },\n    "description": {\n      "type": "string",\n      "description": "A description of the asset",\n      "maxLength": 1000\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"core-schemaorg-types",children:"Core Schema.org Types"}),"\n",(0,t.jsx)(n.p,{children:"MVMD builds on these primary Schema.org types:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Required Properties"}),(0,t.jsx)(n.th,{children:"Common Properties"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://schema.org/CreativeWork",children:"CreativeWork"})}),(0,t.jsx)(n.td,{children:"Generic creative assets"}),(0,t.jsx)(n.td,{children:"name, description"}),(0,t.jsx)(n.td,{children:"creator, dateCreated, license"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://schema.org/3DModel",children:"3DModel"})}),(0,t.jsx)(n.td,{children:"3D object metadata"}),(0,t.jsx)(n.td,{children:"name, contentUrl, encodingFormat"}),(0,t.jsx)(n.td,{children:"creator, dateCreated, license"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://schema.org/ImageObject",children:"ImageObject"})}),(0,t.jsx)(n.td,{children:"Image or texture metadata"}),(0,t.jsx)(n.td,{children:"name, contentUrl, encodingFormat"}),(0,t.jsx)(n.td,{children:"width, height, creator"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://schema.org/Place",children:"Place"})}),(0,t.jsx)(n.td,{children:"Locations and scenes"}),(0,t.jsx)(n.td,{children:"name, description"}),(0,t.jsx)(n.td,{children:"geo, maximumAttendeeCapacity"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://schema.org/VirtualLocation",children:"VirtualLocation"})}),(0,t.jsx)(n.td,{children:"Digital-only locations"}),(0,t.jsx)(n.td,{children:"name"}),(0,t.jsx)(n.td,{children:"additionalType"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"validation-requirements",children:"Validation Requirements"}),"\n",(0,t.jsx)(n.p,{children:"MVMD requires specific validation rules for different metadata profiles:"}),"\n",(0,t.jsx)(n.h3,{id:"basic-profile-validation",children:"Basic Profile Validation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@context"}),": Must include Schema.org vocabulary"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"@type"}),": Must be a valid Schema.org type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": Required, max 100 characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description"}),": Required, max 1000 characters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"identifier"}),": Required, must include propertyID and value"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"creator"}),": Required, must include name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dateCreated"}),": Required, ISO 8601 format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"license"}),": Required, valid URL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"contentUrl"}),": Required for media objects, valid URL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encodingFormat"}),": Required for media objects, valid MIME type"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"advanced-validation",children:"Advanced Validation"}),"\n",(0,t.jsx)(n.p,{children:"MVMD provides additional validation for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cross-references between files"}),"\n",(0,t.jsx)(n.li,{children:"Namespace-specific properties"}),"\n",(0,t.jsx)(n.li,{children:"Integration profile compliance"}),"\n",(0,t.jsx)(n.li,{children:"Property value constraints"}),"\n",(0,t.jsx)(n.li,{children:"Relationship integrity"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"custom-property-validation",children:"Custom Property Validation"}),"\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.code,{children:"additionalProperty"})," objects, MVMD has these validation rules:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperty": {\n    "type": "array",\n    "items": {\n      "type": "object",\n      "required": ["@type", "propertyID", "name", "value"],\n      "properties": {\n        "@type": {\n          "type": "string",\n          "enum": ["PropertyValue"]\n        },\n        "propertyID": {\n          "type": "string",\n          "description": "Unique identifier for the property",\n          "pattern": "^[a-zA-Z][a-zA-Z0-9]*$"\n        },\n        "name": {\n          "type": "string",\n          "description": "Human-readable property name"\n        },\n        "value": {\n          "description": "Property value, can be any JSON type"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MVMD validation is extensible through custom schemas"}),"\n",(0,t.jsx)(n.li,{children:"Validators support Schema.org vocabulary and MVMD extensions"}),"\n",(0,t.jsx)(n.li,{children:"Custom validation rules can be implemented for specific profiles"}),"\n",(0,t.jsx)(n.li,{children:"Schema definitions are versioned with the MVMD specification"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"using-the-schemas",children:"Using the Schemas"}),"\n",(0,t.jsx)(n.p,{children:"To use MVMD's JSON Schema definitions in your projects:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Reference the schemas in your validation tools"}),"\n",(0,t.jsx)(n.li,{children:"Include the appropriate schema version"}),"\n",(0,t.jsx)(n.li,{children:"Extend with domain-specific validation as needed"}),"\n",(0,t.jsx)(n.li,{children:"Consider both Schema.org compliance and MVMD extensions"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./validator.md",children:"Validator"}),": Interactive validation tool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/integration-profiles/basic",children:"Basic Profile"}),": Standard implementation profile"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../standards/schema-org.md",children:"Schema.org Standard"}),": Core vocabulary details"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var r=i(6540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);