"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[3922],{4877:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"standards/vrm","title":"VRM","description":"This page covers how to integrate VRM into your metadata through namespaces.","source":"@site/docs/standards/vrm.md","sourceDirName":"standards","slug":"/standards/vrm","permalink":"/standards/vrm","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/standards/vrm.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docs","previous":{"title":"glTF","permalink":"/standards/gltf"},"next":{"title":"FBX","permalink":"/standards/fbx"}}');var r=a(4848),s=a(8453);const i={sidebar_position:5},o="VRM",l={},c=[{value:"About VRM",id:"about-vrm",level:2},{value:"Core VRM Concepts",id:"core-vrm-concepts",level:2},{value:"Implementing the VRM Standard",id:"implementing-the-vrm-standard",level:2},{value:"Namespace Declaration",id:"namespace-declaration",level:3},{value:"Linking Example",id:"linking-example",level:3},{value:"Embedding Example",id:"embedding-example",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Complete Example",id:"complete-example",level:3},{value:"Integration with Avatar Profile",id:"integration-with-avatar-profile",level:3},{value:"JSON Schema Validation",id:"json-schema-validation",level:2},{value:"JSON-LD Context",id:"json-ld-context",level:2},{value:"Implementation Considerations",id:"implementation-considerations",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"vrm",children:"VRM"})}),"\n",(0,r.jsx)(n.p,{children:"This page covers how to integrate VRM into your metadata through namespaces."}),"\n",(0,r.jsx)(n.h2,{id:"about-vrm",children:"About VRM"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://vrm.dev/en/",children:"VRM"})," is an open file format for standardized 3D humanoid avatars, primarily designed for VR/AR applications and the metaverse. It builds upon the glTF format, adding specific extensions to support humanoid avatars with facial expressions, look-at controls, and standardized rigging."]}),"\n",(0,r.jsx)(n.p,{children:"VRM enables consistent avatar representation across different platforms and applications, making it ideal for cross-platform metaverse experiences where user identity and appearance need to remain consistent."}),"\n",(0,r.jsx)(n.h2,{id:"core-vrm-concepts",children:"Core VRM Concepts"}),"\n",(0,r.jsx)(n.p,{children:"Key concepts in VRM that are relevant to metadata integration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Humanoid Bones"}),": Standardized skeleton structure for consistent animation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Blend Shapes"}),": Facial expressions and mouth shapes for speech and emotions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Look At"}),": Eye movement controls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Bones"}),": Physics simulation for hair, clothing, and accessories"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Materials"}),": Specialized materials for avatar rendering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"First-Person Settings"}),": Configuration for first-person view (avoiding head rendering)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Meta Information"}),": Creator, license, and usage permissions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementing-the-vrm-standard",children:"Implementing the VRM Standard"}),"\n",(0,r.jsx)(n.h3,{id:"namespace-declaration",children:"Namespace Declaration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "vrm": "https://vrm.dev/schemas/"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"linking-example",children:"Linking Example"}),"\n",(0,r.jsx)(n.p,{children:"When referencing external VRM assets:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Custom Avatar",\n  "contentUrl": "https://example.com/avatars/custom-avatar.vrm",\n  "encodingFormat": "model/vrm"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"For avatars with version information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Custom Avatar",\n  "contentUrl": "https://example.com/avatars/custom-avatar.vrm",\n  "encodingFormat": "model/vrm",\n  "version": "0.91",\n  "contentSize": "3.7 MB"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"embedding-example",children:"Embedding Example"}),"\n",(0,r.jsx)(n.p,{children:"When embedding VRM metadata directly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "vrm": "https://vrm.dev/schemas/"\n  },\n  "@type": "3DModel",\n  "name": "Custom Avatar",\n  "vrm:version": "0.91",\n  "vrm:meta": {\n    "title": "Custom Avatar",\n    "author": "Avatar Creator",\n    "contactInformation": "creator@example.com",\n    "reference": "https://example.com/avatar-reference",\n    "allowedUserName": "OnlyAuthor",\n    "violentUssage": "Disallow",\n    "sexualUssage": "Disallow",\n    "commercialUssage": "Disallow",\n    "license": "CC_BY_NC_ND"\n  },\n  "vrm:humanoid": {\n    "humanBones": [\n      {"bone": "hips", "node": 1},\n      {"bone": "spine", "node": 2},\n      {"bone": "chest", "node": 3},\n      {"bone": "neck", "node": 4},\n      {"bone": "head", "node": 5}\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,r.jsx)(n.p,{children:"VRM is used in a variety of metaverse and avatar applications:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cross-platform virtual avatars"}),"\n",(0,r.jsx)(n.li,{children:"VR/AR social applications"}),"\n",(0,r.jsx)(n.li,{children:"Virtual influencers and digital humans"}),"\n",(0,r.jsx)(n.li,{children:"Virtual meetings and collaboration spaces"}),"\n",(0,r.jsx)(n.li,{children:"Gaming and interactive entertainment"}),"\n",(0,r.jsx)(n.li,{children:"Virtual performance and motion capture"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,r.jsx)(n.p,{children:"A simple VRM avatar reference:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Basic Avatar",\n  "description": "A simple humanoid avatar for virtual interactions",\n  "contentUrl": "https://example.com/avatars/basic-avatar.vrm",\n  "encodingFormat": "model/vrm",\n  "license": "https://creativecommons.org/licenses/by-nc-nd/4.0/"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsx)(n.p,{children:"For a complete avatar with detailed metadata:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "vrm": "https://vrm.dev/schemas/"\n  },\n  "@type": "3DModel",\n  "name": "Advanced Avatar",\n  "description": "Detailed avatar with expressions and physics",\n  "contentUrl": "https://example.com/avatars/advanced-avatar.vrm",\n  "encodingFormat": "model/vrm",\n  "creator": {\n    "@type": "Person",\n    "name": "Avatar Designer",\n    "url": "https://avatardesigner.example.com"\n  },\n  "license": "https://creativecommons.org/licenses/by-nc-nd/4.0/",\n  "vrm:version": "0.91",\n  "vrm:meta": {\n    "title": "Advanced Avatar",\n    "author": "Avatar Designer",\n    "contactInformation": "designer@example.com",\n    "reference": "https://avatardesigner.example.com/portfolio",\n    "allowedUserName": "Everyone",\n    "violentUssage": "Disallow",\n    "sexualUssage": "Disallow",\n    "commercialUssage": "Allow",\n    "license": "CC_BY_NC_ND"\n  },\n  "vrm:humanoid": {\n    "armStretch": 0.85,\n    "legStretch": 0.85,\n    "upperArmTwist": 0.5,\n    "lowerArmTwist": 0.5,\n    "upperLegTwist": 0.5,\n    "lowerLegTwist": 0.5,\n    "feetSpacing": 0.2,\n    "hasTranslationDoF": false\n  },\n  "vrm:blendShapes": [\n    {"name": "blink", "presetName": "blink", "binds": [{"index": 6, "weight": 1.0}]},\n    {"name": "smile", "presetName": "joy", "binds": [{"index": 7, "weight": 1.0}]},\n    {"name": "angry", "presetName": "angry", "binds": [{"index": 8, "weight": 1.0}]}\n  ],\n  "vrm:lookAt": {\n    "offsetFromHeadBone": [0, 0.06, 0],\n    "lookAtHorizontalInner": {"curve": [0, 0, 0, 1, 1, 1], "xRange": 90, "yRange": 10},\n    "lookAtHorizontalOuter": {"curve": [0, 0, 0, 1, 1, 1], "xRange": 90, "yRange": 10},\n    "lookAtVerticalDown": {"curve": [0, 0, 0, 1, 1, 1], "xRange": 90, "yRange": 10},\n    "lookAtVerticalUp": {"curve": [0, 0, 0, 1, 1, 1], "xRange": 90, "yRange": 10}\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"integration-with-avatar-profile",children:"Integration with Avatar Profile"}),"\n",(0,r.jsx)(n.p,{children:"Combining VRM with the MVMD Avatar Integration Profile:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/",\n    "mvmd": "https://mvmd.org/v1/",\n    "vrm": "https://vrm.dev/schemas/"\n  },\n  "@type": "3DModel",\n  "name": "Custom Avatar",\n  "description": "Personalized avatar for metaverse interactions",\n  "contentUrl": "https://example.com/avatars/custom-avatar.vrm",\n  "encodingFormat": "model/vrm",\n  "creator": {\n    "@type": "Person",\n    "name": "User123",\n    "url": "https://social.example.com/User123"\n  },\n  "additionalProperty": [\n    {\n      "@type": "PropertyValue",\n      "propertyID": "avatarProperties",\n      "name": "Avatar Properties",\n      "value": {\n        "type": "humanoid",\n        "style": "stylized",\n        "skeleton": "vrm-standard",\n        "measurements": {\n          "height": 1.75,\n          "proportions": "neutral"\n        },\n        "compatibility": ["platform-a", "platform-b", "platform-c"],\n        "expressiveness": "full"\n      }\n    }\n  ],\n  "vrm:version": "0.91",\n  "vrm:meta": {\n    "title": "User123 Avatar",\n    "author": "User123",\n    "allowedUserName": "OnlyAuthor",\n    "violentUssage": "Disallow",\n    "sexualUssage": "Disallow",\n    "commercialUssage": "Disallow"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"json-schema-validation",children:"JSON Schema Validation"}),"\n",(0,r.jsx)(n.p,{children:"For validating VRM namespace references in MVMD, the following schema properties are defined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "title": "VRM Namespace Schema",\n  "type": "object",\n  "properties": {\n    "vrm:version": {\n      "type": "string",\n      "description": "VRM specification version"\n    },\n    "vrm:meta": {\n      "type": "object",\n      "description": "VRM meta information",\n      "properties": {\n        "title": { "type": "string" },\n        "author": { "type": "string" },\n        "contactInformation": { "type": "string" },\n        "reference": { "type": "string" },\n        "allowedUserName": { \n          "type": "string", \n          "enum": ["OnlyAuthor", "ExplicitlyLicensedPerson", "Everyone"] \n        },\n        "violentUssage": { \n          "type": "string", \n          "enum": ["Allow", "Disallow"] \n        },\n        "sexualUssage": { \n          "type": "string", \n          "enum": ["Allow", "Disallow"] \n        },\n        "commercialUssage": { \n          "type": "string", \n          "enum": ["Allow", "Disallow"] \n        },\n        "license": { "type": "string" }\n      }\n    },\n    "vrm:humanoid": {\n      "type": "object",\n      "description": "VRM humanoid configuration"\n    },\n    "vrm:blendShapes": {\n      "type": "array",\n      "description": "VRM blend shape (facial expression) configurations"\n    },\n    "vrm:lookAt": {\n      "type": "object",\n      "description": "VRM eye movement configuration"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"json-ld-context",children:"JSON-LD Context"}),"\n",(0,r.jsx)(n.p,{children:"The VRM namespace can be mapped to JSON-LD context for semantic interoperability:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "vrm": "https://vrm.dev/schemas/",\n    "vrm:version": { "@id": "vrm:version" },\n    "vrm:meta": { "@id": "vrm:meta" },\n    "vrm:humanoid": { "@id": "vrm:humanoid" },\n    "vrm:blendShapes": { "@id": "vrm:blendShapes" },\n    "vrm:lookAt": { "@id": "vrm:lookAt" }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"implementation-considerations",children:"Implementation Considerations"}),"\n",(0,r.jsx)(n.p,{children:"When implementing the VRM namespace, keep these considerations in mind:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Version Compatibility"}),": Specify the VRM version (0.x vs 1.x) as they have different structures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"License Requirements"}),": Always include the vrm",":meta"," section with license information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform Support"}),": Verify target platform support for specific VRM features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Consider polygon count and texture sizes for cross-platform compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privacy"}),": Be mindful of personal avatar data and usage restrictions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/integration-profiles/avatar",children:"Avatar Integration Profile"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/integration-profiles/identity",children:"Identity Integration Profile"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/standards/gltf",children:"glTF Standard"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/implementation/cross-platform-assets",children:"Cross-Platform Asset Implementation"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);