"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[4623],{4015:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"implementation/composable/schema-parts","title":"Using Schema.org hasPart","description":"The Schema.org hasPart property provides a powerful foundation for defining relationships between components in composable assets. This guide explains how to effectively implement component relationships while maintaining Schema.org compatibility.","source":"@site/docs/implementation/composable/schema-parts.md","sourceDirName":"implementation/composable","slug":"/implementation/composable/schema-parts","permalink":"/implementation/composable/schema-parts","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/implementation/composable/schema-parts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Composable Assets Concepts","permalink":"/implementation/composable/concepts"},"next":{"title":"Assembly Patterns and Examples","permalink":"/implementation/composable/assembly-patterns"}}');var o=t(4848),i=t(8453);const r={},l="Using Schema.org hasPart",a={},c=[{value:"Basic Component Relationships",id:"basic-component-relationships",level:2},{value:"Component Hierarchies",id:"component-hierarchies",level:2},{value:"Component References",id:"component-references",level:2},{value:"Complete Implementation Example",id:"complete-implementation-example",level:2},{value:"Validation Requirements",id:"validation-requirements",level:2},{value:"Component Properties",id:"component-properties",level:3},{value:"Relationship Properties",id:"relationship-properties",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"using-schemaorg-haspart",children:"Using Schema.org hasPart"})}),"\n",(0,o.jsxs)(n.p,{children:["The Schema.org ",(0,o.jsx)(n.code,{children:"hasPart"})," property provides a powerful foundation for defining relationships between components in composable assets. This guide explains how to effectively implement component relationships while maintaining Schema.org compatibility."]}),"\n",(0,o.jsx)(n.h2,{id:"basic-component-relationships",children:"Basic Component Relationships"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"hasPart"})," property enables you to define clear relationships between assets and their components. Here's how to implement basic component references:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Simple Component Assembly",\n  "hasPart": {\n    "@type": "3DModel",\n    "name": "Sub Component",\n    "contentUrl": "https://example.com/component.glb"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"When working with multiple components, use an array of parts:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Multi-Component Assembly",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Component A",\n      "contentUrl": "https://example.com/component-a.glb"\n    },\n    {\n      "@type": "3DModel",\n      "name": "Component B",\n      "contentUrl": "https://example.com/component-b.glb"\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"component-hierarchies",children:"Component Hierarchies"}),"\n",(0,o.jsxs)(n.p,{children:["Complex assets often require nested component structures. Use ",(0,o.jsx)(n.code,{children:"hasPart"})," recursively to create hierarchical relationships:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Nested Component Structure",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "name": "Main Assembly",\n      "hasPart": [\n        {\n          "@type": "3DModel",\n          "name": "Sub Component A",\n          "contentUrl": "https://example.com/sub-a.glb"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"component-references",children:"Component References"}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"@id"})," to create referenceable components that can be linked to from other parts of your metadata:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Referenced Components",\n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "@id": "#component-a",\n      "name": "Component A",\n      "requires": ["#component-b"]\n    },\n    {\n      "@type": "3DModel",\n      "@id": "#component-b",\n      "name": "Component B"\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"complete-implementation-example",children:"Complete Implementation Example"}),"\n",(0,o.jsx)(n.p,{children:"Here's a comprehensive example showing how to implement a complex modular asset:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "@context": {\n    "@vocab": "https://schema.org/"\n  },\n  "@type": "3DModel",\n  "name": "Modular Vehicle",\n  "description": "Customizable vehicle with interchangeable parts",\n  \n  "identifier": {\n    "@type": "PropertyValue",\n    "propertyID": "MVMD-ID",\n    "value": "vehicle-2024-001"\n  },\n  \n  "hasPart": [\n    {\n      "@type": "3DModel",\n      "@id": "#chassis",\n      "name": "Vehicle Chassis",\n      "contentUrl": "https://example.com/parts/chassis.glb",\n      "additionalProperty": {\n        "@type": "PropertyValue",\n        "propertyID": "required",\n        "value": true,\n        "attachmentPoints": [\n          {\n            "id": "front_wheels",\n            "type": "wheel",\n            "count": 2\n          },\n          {\n            "id": "rear_wheels",\n            "type": "wheel",\n            "count": 2\n          },\n          {\n            "id": "body",\n            "type": "body",\n            "count": 1\n          }\n        ]\n      }\n    },\n    {\n      "@type": "3DModel",\n      "@id": "#body",\n      "name": "Vehicle Body",\n      "contentUrl": "https://example.com/parts/body.glb",\n      "additionalProperty": {\n        "@type": "PropertyValue",\n        "propertyID": "configuration",\n        "value": {\n          "required": true,\n          "attachesTo": "chassis",\n          "variants": [\n            {\n              "id": "sport",\n              "name": "Sport Body",\n              "contentUrl": "https://example.com/parts/body-sport.glb"\n            },\n            {\n              "id": "utility",\n              "name": "Utility Body",\n              "contentUrl": "https://example.com/parts/body-utility.glb"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \n  "additionalProperty": {\n    "@type": "PropertyValue",\n    "propertyID": "assemblyRules",\n    "value": {\n      "required": ["chassis", "body"],\n      "optional": ["accessories"],\n      "constraints": {\n        "maxAccessories": 5,\n        "compatibilityRules": [\n          {\n            "if": "body.sport",\n            "then": "wheels.street"\n          },\n          {\n            "if": "body.utility",\n            "then": "wheels.offroad"\n          }\n        ]\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"validation-requirements",children:"Validation Requirements"}),"\n",(0,o.jsx)(n.p,{children:"For proper Schema.org compliance and functionality, ensure:"}),"\n",(0,o.jsx)(n.h3,{id:"component-properties",children:"Component Properties"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Each component has a valid @type"}),"\n",(0,o.jsx)(n.li,{children:"Required identifiers are present"}),"\n",(0,o.jsx)(n.li,{children:"URLs are properly formatted"}),"\n",(0,o.jsx)(n.li,{children:"References are valid"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"relationship-properties",children:"Relationship Properties"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Proper nesting structure"}),"\n",(0,o.jsx)(n.li,{children:"Valid reference links"}),"\n",(0,o.jsx)(n.li,{children:"Complete dependency chains"}),"\n",(0,o.jsx)(n.li,{children:"Proper constraint definitions"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Component Organization"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Create clear hierarchies"}),"\n",(0,o.jsx)(n.li,{children:"Use meaningful identifiers"}),"\n",(0,o.jsx)(n.li,{children:"Group related components"}),"\n",(0,o.jsx)(n.li,{children:"Define explicit relationships"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reference Management"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use consistent ID patterns"}),"\n",(0,o.jsx)(n.li,{children:"Document dependencies clearly"}),"\n",(0,o.jsx)(n.li,{children:"Validate references"}),"\n",(0,o.jsx)(n.li,{children:"Handle missing references gracefully"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Implementation Details"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Follow Schema.org patterns"}),"\n",(0,o.jsx)(n.li,{children:"Use proper property types"}),"\n",(0,o.jsx)(n.li,{children:"Include complete metadata"}),"\n",(0,o.jsx)(n.li,{children:"Document constraints clearly"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Review Assembly Patterns documentation for implementation examples"}),"\n",(0,o.jsx)(n.li,{children:"Explore Composable Concepts for theoretical background"}),"\n",(0,o.jsx)(n.li,{children:"Use Validation Tools to verify your metadata structure"}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);