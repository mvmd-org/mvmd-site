"use strict";(self.webpackChunkmvmd_site=self.webpackChunkmvmd_site||[]).push([[7103],{6381:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"recipes/overview","title":"Overview","description":"The Recipes section provides standardized metadata templates for common Metaverse asset types. These recipes combine multiple standards and best practices into ready-to-use patterns that ensure interoperability and functionality across different platforms and environments.","source":"@site/docs/recipes/overview.md","sourceDirName":"recipes","slug":"/recipes/overview","permalink":"/recipes/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/mvmd-org/mvmd-site/edit/main/docs/recipes/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices","permalink":"/implementation/best-practices"},"next":{"title":"Composable 3D NFT","permalink":"/recipes/composable-3d-nft"}}');var s=n(4848),t=n(8453);const c={sidebar_position:1},l="Overview",a={},o=[{value:"Available Recipes",id:"available-recipes",level:2},{value:"Basic Recipe",id:"basic-recipe",level:3},{value:"Wearable Recipe",id:"wearable-recipe",level:3},{value:"Avatar Recipe",id:"avatar-recipe",level:3},{value:"Equipable Recipe",id:"equipable-recipe",level:3},{value:"Scene Recipe",id:"scene-recipe",level:3},{value:"Future Recipes",id:"future-recipes",level:3},{value:"Contributing New Recipes",id:"contributing-new-recipes",level:2},{value:"Getting Started",id:"getting-started",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"overview",children:"Overview"})}),"\n",(0,s.jsx)(i.p,{children:"The Recipes section provides standardized metadata templates for common Metaverse asset types. These recipes combine multiple standards and best practices into ready-to-use patterns that ensure interoperability and functionality across different platforms and environments."}),"\n",(0,s.jsx)(i.h2,{id:"available-recipes",children:"Available Recipes"}),"\n",(0,s.jsx)(i.h3,{id:"basic-recipe",children:"Basic Recipe"}),"\n",(0,s.jsx)(i.p,{children:"The foundation for all Metaverse assets:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Core metadata structure"}),"\n",(0,s.jsx)(i.li,{children:"Essential properties"}),"\n",(0,s.jsx)(i.li,{children:"Standard identifiers"}),"\n",(0,s.jsx)(i.li,{children:"Basic validation rules"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/basic",children:"Basic Recipe"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"wearable-recipe",children:"Wearable Recipe"}),"\n",(0,s.jsx)(i.p,{children:"Template for virtual clothing and accessories:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Attachment points"}),"\n",(0,s.jsx)(i.li,{children:"Customization options"}),"\n",(0,s.jsx)(i.li,{children:"Avatar compatibility"}),"\n",(0,s.jsx)(i.li,{children:"Physics properties"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/wearable",children:"Wearable Recipe"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"avatar-recipe",children:"Avatar Recipe"}),"\n",(0,s.jsx)(i.p,{children:"Structure for virtual characters and avatars:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Character properties"}),"\n",(0,s.jsx)(i.li,{children:"Animation support"}),"\n",(0,s.jsx)(i.li,{children:"Customization systems"}),"\n",(0,s.jsx)(i.li,{children:"Interaction capabilities"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/avatar",children:"Avatar Recipe"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"equipable-recipe",children:"Equipable Recipe"}),"\n",(0,s.jsx)(i.p,{children:"Pattern for interactive items and tools:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Attachment configurations"}),"\n",(0,s.jsx)(i.li,{children:"Interaction systems"}),"\n",(0,s.jsx)(i.li,{children:"Animation controls"}),"\n",(0,s.jsx)(i.li,{children:"Physics properties"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/equipable",children:"Equipable Recipe"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"scene-recipe",children:"Scene Recipe"}),"\n",(0,s.jsx)(i.p,{children:"Template for virtual environments:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Spatial configuration"}),"\n",(0,s.jsx)(i.li,{children:"Lighting systems"}),"\n",(0,s.jsx)(i.li,{children:"Interactive elements"}),"\n",(0,s.jsx)(i.li,{children:"Performance settings"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/scene",children:"Scene Recipe"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"future-recipes",children:"Future Recipes"}),"\n",(0,s.jsx)(i.p,{children:"Planned recipes for future development:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Digital Twins"}),"\n",(0,s.jsx)(i.li,{children:"Vehicles/Mounts"}),"\n",(0,s.jsx)(i.li,{children:"Consumables"}),"\n",(0,s.jsx)(i.li,{children:"Fractional Assets"}),"\n",(0,s.jsx)(i.li,{children:"Virtual Events"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Jump to the ",(0,s.jsx)(i.a,{href:"/recipes/future",children:"Future Recipes"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"contributing-new-recipes",children:"Contributing New Recipes"}),"\n",(0,s.jsx)(i.p,{children:"The MVMD Recipes section is designed to grow and evolve with the Metaverse ecosystem. We actively encourage contributions from:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Standards organizations"}),"\n",(0,s.jsx)(i.li,{children:"Platform developers"}),"\n",(0,s.jsx)(i.li,{children:"Content creators"}),"\n",(0,s.jsx)(i.li,{children:"Community members"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"To submit a new recipe or propose changes to existing ones:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Fork the ",(0,s.jsx)(i.a,{href:"https://github.com/mvmd-org/mvmd",children:"MVMD GitHub repository"})]}),"\n",(0,s.jsx)(i.li,{children:"Create a new branch for your recipe"}),"\n",(0,s.jsx)(i.li,{children:"Follow the recipe template structure"}),"\n",(0,s.jsx)(i.li,{children:"Submit a Pull Request for review"}),"\n",(0,s.jsx)(i.li,{children:"Engage in community discussion"}),"\n",(0,s.jsx)(i.li,{children:"Address feedback and revisions"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"All submissions are reviewed for:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Technical accuracy"}),"\n",(0,s.jsx)(i.li,{children:"Standards compliance"}),"\n",(0,s.jsx)(i.li,{children:"Implementation viability"}),"\n",(0,s.jsx)(i.li,{children:"Documentation quality"}),"\n",(0,s.jsx)(i.li,{children:"Community benefit"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(i.p,{children:["Begin with the ",(0,s.jsx)(i.a,{href:"/recipes/basic",children:"Basic Recipe"})," to understand core metadata patterns, then explore specific recipes based on your asset types. Each recipe provides complete examples and validation rules to ensure proper implementation."]}),"\n",(0,s.jsxs)(i.p,{children:["For contributing organizations: review the ",(0,s.jsx)(i.a,{href:"/recipes/future",children:"Future Recipes"})," section to identify gaps and opportunities for new recipes that could benefit the broader Metaverse ecosystem."]}),"\n",(0,s.jsx)(i.p,{children:"Remember that recipes are living documents that will evolve as standards mature and new use cases emerge. Your contributions help build a more interoperable and robust Metaverse for everyone."})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>l});var r=n(6540);const s={},t=r.createContext(s);function c(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);